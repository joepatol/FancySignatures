window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"fancy_signatures": {"fullname": "fancy_signatures", "modulename": "fancy_signatures", "kind": "module", "doc": "<h1 id=\"fancysignatures\">FancySignatures</h1>\n\n<p>This package aims to leverage Python type hints, to validate function and method parameters using a simple decorator.\nIt also add validation functionality by injecting fields as default values.</p>\n\n<h2 id=\"basic-usage\">Basic usage</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">fancy_signatures</span> <span class=\"kn\">import</span> <span class=\"n\">validate</span>\n\n<span class=\"nd\">@validate</span>\n<span class=\"k\">def</span> <span class=\"nf\">some_func</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"n\">b</span>\n\n\n<span class=\"n\">some_func</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>  <span class=\"c1\"># return 3</span>\n<span class=\"n\">some_func</span><span class=\"p\">(</span><span class=\"s2\">&quot;1&quot;</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>  <span class=\"c1\"># returns 3</span>\n<span class=\"n\">some_func</span><span class=\"p\">(</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>  <span class=\"c1\"># raises TypeCastError</span>\n</code></pre>\n</div>\n\n<p>Use the <code>lazy</code> parameter to control whether exceptions are raised or collected in an <code>ExceptionGroup</code> and raised after all validations are done</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">fancy_signatures</span> <span class=\"kn\">import</span> <span class=\"n\">validate</span>\n\n\n<span class=\"nd\">@validate</span><span class=\"p\">(</span><span class=\"n\">lazy</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">some_func</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"n\">b</span>\n\n\n<span class=\"n\">some_func</span><span class=\"p\">(</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;b&quot;</span><span class=\"p\">)</span>  <span class=\"c1\"># raises ExceptionGroup with both TypeCastErrors</span>\n</code></pre>\n</div>\n\n<p>On a high level, there are 3 main steps performed:</p>\n\n<ol>\n<li>Validate the type hints against the provided parameters, if they don't match attempt to typecast</li>\n<li>Run all provided validation functions</li>\n<li>Run all provided <code>Related</code> validation functions; validators that use a number of function arguments</li>\n</ol>\n\n<p>If <code>lazy=True</code> an <code>ExceptionGroup</code> will be raised if an error is found in one of the steps.\nFor example, if the type validation failed in step 1 an exception will be raised. The next steps will <strong>not</strong> be performed.</p>\n\n<h2 id=\"more-advanced-usage\">More advanced usage</h2>\n\n<p>Next to validating type hints, the package provides a way to apply validations on your parameters using the <code>arg</code> function.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">fancy_signatures</span> <span class=\"kn\">import</span> <span class=\"n\">validate</span><span class=\"p\">,</span> <span class=\"n\">arg</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fancy_signatures.validation</span> <span class=\"kn\">import</span> <span class=\"n\">IntMin</span>\n\n\n<span class=\"nd\">@validate</span>\n<span class=\"k\">def</span> <span class=\"nf\">some_func</span><span class=\"p\">(</span>\n    <span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"n\">arg</span><span class=\"p\">(</span><span class=\"n\">validators</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">IntMin</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)]),</span> \n    <span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"n\">arg</span><span class=\"p\">(</span><span class=\"n\">validators</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">IntMin</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)]),</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span> \n    <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"n\">b</span>\n\n\n<span class=\"n\">some_func</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>  <span class=\"c1\"># Returns 3</span>\n<span class=\"n\">some_func</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>  <span class=\"c1\"># Raise ValidationError</span>\n</code></pre>\n</div>\n\n<p>It's also possible to provide default values. It enables omitted args and kwargs completely.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">fancy_signatures</span> <span class=\"kn\">import</span> <span class=\"n\">validate</span><span class=\"p\">,</span> <span class=\"n\">arg</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fancy_signatures.default</span> <span class=\"kn\">import</span> <span class=\"n\">IntDefault</span>\n\n\n<span class=\"nd\">@validate</span>\n<span class=\"k\">def</span> <span class=\"nf\">some_func</span><span class=\"p\">(</span>\n    <span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> \n    <span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"n\">arg</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"n\">IntDefault</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)),</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span> \n    <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"n\">b</span>\n\n\n<span class=\"n\">some_func</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>  <span class=\"c1\"># Returns 3</span>\n<span class=\"n\">some_func</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>  <span class=\"c1\"># Returns 7</span>\n<span class=\"n\">some_func</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>  <span class=\"c1\"># Raises ValidationError</span>\n<span class=\"n\">some_func</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># Returns 6</span>\n</code></pre>\n</div>\n\n<p>By default, arguments are required but it can be customized by the <code>required</code> parameters.\nIf you don't provide a default and the parameter is not passed. It will interally be an instance of <code>__EmptyArg__</code>.\nBe aware that your function will this still receive the argument with the special value and it's up to the user to handle it.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">fancy_signatures</span> <span class=\"kn\">import</span> <span class=\"n\">validate</span><span class=\"p\">,</span> <span class=\"n\">arg</span>\n\n\n<span class=\"nd\">@validate</span>\n<span class=\"k\">def</span> <span class=\"nf\">empty_arg</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"n\">__EmptyArg__</span> <span class=\"o\">=</span> <span class=\"n\">arg</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">))</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">))</span>\n\n\n<span class=\"n\">empty_arg</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n\n<span class=\"sd\">&quot;&quot;&quot;&quot;</span>\n<span class=\"sd\">Output:</span>\n<span class=\"sd\">&lt;class &#39;int&#39;&gt;</span>\n<span class=\"sd\">&lt;class &#39;fancy_signatures.core.types.__EmptyArg__&#39;&gt;</span>\n<span class=\"sd\">&quot;&quot;&quot;</span><span class=\"s2\">&quot;</span>\n</code></pre>\n</div>\n\n<p>It's also possible to validate related arguments using the <code>Related</code> object.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">fancy_signatures</span> <span class=\"kn\">import</span> <span class=\"n\">validate</span><span class=\"p\">,</span> <span class=\"n\">arg</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fancy_signatures.validation</span> <span class=\"kn\">import</span> <span class=\"n\">Related</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">should_be_greater</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">a</span> <span class=\"o\">&lt;=</span> <span class=\"n\">b</span><span class=\"p\">:</span>\n        <span class=\"k\">raise</span> <span class=\"ne\">ValueError</span><span class=\"p\">(</span><span class=\"s2\">&quot;a should be greater than b&quot;</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@validate</span><span class=\"p\">(</span><span class=\"n\">related</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">Related</span><span class=\"p\">(</span><span class=\"n\">should_be_greater</span><span class=\"p\">,</span> <span class=\"s2\">&quot;a&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;b&quot;</span><span class=\"p\">)])</span>\n<span class=\"k\">def</span> <span class=\"nf\">related</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span> \n    <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"n\">b</span>\n\n\n<span class=\"n\">related</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>  <span class=\"c1\"># OK</span>\n<span class=\"n\">related</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>  <span class=\"c1\"># Raises ValidationError</span>\n</code></pre>\n</div>\n\n<p>Note that the parameters are named the same in the validation function <code>should_be_greater</code> then they are in the main function.\nInternally <code>fancy_signatures</code> figures out which arguments are required for the validation function and passes them as kwargs to your function</p>\n\n<p>Of course, you can mix and match the functionalities at will.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">fancy_signatures</span> <span class=\"kn\">import</span> <span class=\"n\">validate</span><span class=\"p\">,</span> <span class=\"n\">arg</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fancy_signatures.validation</span> <span class=\"kn\">import</span> <span class=\"n\">Related</span><span class=\"p\">,</span> <span class=\"n\">IntDefault</span><span class=\"p\">,</span> <span class=\"n\">IntMin</span>\n\n\n<span class=\"nd\">@validate</span><span class=\"p\">(</span><span class=\"n\">lazy</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">related</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">Related</span><span class=\"p\">(</span><span class=\"n\">should_be_greater</span><span class=\"p\">,</span> <span class=\"s2\">&quot;a&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;b&quot;</span><span class=\"p\">)])</span>\n<span class=\"k\">def</span> <span class=\"nf\">my_func</span><span class=\"p\">(</span>\n    <span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"n\">arg</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"n\">IntDefault</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">validators</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">IntMin</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)]),</span> \n    <span class=\"n\">b</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"n\">arg</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"n\">IntDefault</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">validators</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">IntMin</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)])</span>\n<span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span> \n    <span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"n\">b</span>\n</code></pre>\n</div>\n\n<p>Type hints of non-builtins will also work, as long as they are not generics (they inherit from <code>typing.Generic</code>) for handling custom generics see the\nsection on extending the library.</p>\n\n<p>For example, say your parameter is a <code>pydantic.BaseModel</code></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">fancy_signatures</span> <span class=\"kn\">import</span> <span class=\"n\">validate</span><span class=\"p\">,</span> <span class=\"n\">arg</span> \n\n<span class=\"kn\">from</span> <span class=\"nn\">pydantic</span> <span class=\"kn\">import</span> <span class=\"n\">BaseModel</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">BaseModel</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n    <span class=\"n\">age</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n\n\n<span class=\"nd\">@validate</span>\n<span class=\"k\">def</span> <span class=\"nf\">pydantic_func</span><span class=\"p\">(</span><span class=\"n\">persons</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">Person</span><span class=\"p\">],</span> <span class=\"n\">min_age</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"n\">arg</span><span class=\"p\">(</span><span class=\"n\">required</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Person</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n</code></pre>\n</div>\n\n<p>Because of the auto-typecasting done by <code>fancy_signatures</code> you can pass a <code>dict</code> of kwargs and it'll be unpacked for you.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">input_dict</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">&quot;persons&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;A&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;age&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;27&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n            <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;B&quot;</span><span class=\"p\">,</span>\n            <span class=\"s2\">&quot;age&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;25&quot;</span><span class=\"p\">,</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">],</span>\n    <span class=\"s2\">&quot;min_age&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;20&quot;</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">pydantic_func</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">input_dict</span><span class=\"p\">)</span>  <span class=\"c1\"># OK</span>\n\n<span class=\"c1\"># Partial unpacking is also supported</span>\n\n<span class=\"n\">persons_list</span> <span class=\"o\">=</span>  <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;A&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;age&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;27&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;B&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;age&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;25&quot;</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">pydantic_func</span><span class=\"p\">(</span><span class=\"n\">persons</span><span class=\"o\">=</span><span class=\"n\">persons_list</span><span class=\"p\">,</span> <span class=\"n\">max_age</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">)</span>  <span class=\"c1\"># Also OK</span>\n</code></pre>\n</div>\n\n<h2 id=\"extending-the-package\">Extending the package</h2>\n\n<p>The package is built with extension support in mind. </p>\n\n<p>You can provide your own custom validator. Just inherit from the <code>Validator</code> base class.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">fancy_signatures</span> <span class=\"kn\">import</span> <span class=\"n\">validate</span><span class=\"p\">,</span> <span class=\"n\">arg</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fancy_signatures.core.interface</span> <span class=\"kn\">import</span> <span class=\"n\">Validator</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fancy_signatures.core.exceptions</span> <span class=\"kn\">import</span> <span class=\"n\">ValidationError</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ValidateDevisibleByTwo</span><span class=\"p\">(</span><span class=\"n\">Validator</span><span class=\"p\">[</span><span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">]):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">obj</span> <span class=\"o\">%</span> <span class=\"mi\">2</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">ValidationError</span><span class=\"p\">(</span><span class=\"s2\">&quot;Should be divisible by 2&quot;</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">obj</span>\n\n\n<span class=\"nd\">@validate</span>\n<span class=\"k\">def</span> <span class=\"nf\">custom_validator</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"n\">arg</span><span class=\"p\">(</span><span class=\"n\">validators</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ValidateDevisibleByTwo</span><span class=\"p\">()]))</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span>\n</code></pre>\n</div>\n\n<p>Similarly, you can also provide your own <code>Default</code> class. Be aware though that defaults are applied <strong>before</strong> typecasting. Hence,\nyou are not guaranteed that the type of the value is actually what you'd expect. It's probably wise to use a try..except block</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">fancy_signatures</span> <span class=\"kn\">import</span> <span class=\"n\">validate</span><span class=\"p\">,</span> <span class=\"n\">arg</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fancy_signatures.core.interface</span> <span class=\"kn\">import</span> <span class=\"n\">Default</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">NeverBiggerThanTen</span><span class=\"p\">(</span><span class=\"n\">Default</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">__EmptyArg__</span><span class=\"p\">):</span>\n            <span class=\"k\">return</span> <span class=\"mi\">0</span>\n        <span class=\"k\">elif</span> <span class=\"n\">value</span> <span class=\"o\">&gt;</span> <span class=\"mi\">10</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"mi\">10</span>\n        <span class=\"k\">return</span> <span class=\"n\">value</span>\n\n\n<span class=\"nd\">@validate</span>\n<span class=\"k\">def</span> <span class=\"nf\">custom_default</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"n\">arg</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"n\">NeverBiggerThanTen</span><span class=\"p\">()))</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">int</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span>\n\n\n<span class=\"n\">custom_default</span><span class=\"p\">()</span>  <span class=\"c1\"># Returns 0</span>\n<span class=\"n\">custom_default</span><span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">)</span>  <span class=\"c1\"># Returns 8</span>\n<span class=\"n\">custom_default</span><span class=\"p\">(</span><span class=\"mi\">22</span><span class=\"p\">)</span>  <span class=\"c1\"># Returns 10</span>\n</code></pre>\n</div>\n\n<p>As mentioned before, hinting your custom classes should work fine with the only exception of classes that inherit from <code>typing.Generic</code>. \nIf your class does so, you should add a handler to <code>GenericAliasTypecaster</code>.</p>\n\n<p>Support for common generics such as <code>list</code>, <code>dict</code> and <code>tuple</code> are built-in. If your generic is not, it's quite easy to add one.\nSay for example you want to support a <code>numpy.ndarray</code>.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">get_args</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fancy_signatures</span> <span class=\"kn\">import</span> <span class=\"n\">validate</span><span class=\"p\">,</span> <span class=\"n\">arg</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fancy_signatures.core.interface</span> <span class=\"kn\">import</span> <span class=\"n\">TypeCaster</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fancy_signatures.typecasting</span> <span class=\"kn\">import</span> <span class=\"n\">GenericAliasTypecaster</span><span class=\"p\">,</span> <span class=\"n\">typecaster_factory</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">handle_np_array</span><span class=\"p\">(</span><span class=\"n\">type_hint</span><span class=\"p\">:</span> <span class=\"nb\">type</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">TypeCaster</span><span class=\"p\">:</span>\n    <span class=\"n\">elements_type</span> <span class=\"o\">=</span> <span class=\"n\">get_args</span><span class=\"p\">(</span><span class=\"n\">type_hint</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_handler_func</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"p\">[</span><span class=\"n\">typecaster_factory</span><span class=\"p\">(</span><span class=\"n\">elements_type</span><span class=\"p\">)(</span><span class=\"n\">el</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">el</span> <span class=\"ow\">in</span> <span class=\"n\">value</span><span class=\"p\">]</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">TypeCaster</span><span class=\"p\">(</span><span class=\"n\">_handler_func</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">GenericAliasTypecaster</span><span class=\"o\">.</span><span class=\"n\">add_handler</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">,</span> <span class=\"n\">handle_np_array</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@validate</span>\n<span class=\"k\">def</span> <span class=\"nf\">custom_handler</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">:</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">ndarray</span><span class=\"p\">[</span><span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">int16</span> <span class=\"o\">|</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">int32</span> <span class=\"o\">|</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">int64</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">:</span>\n    <span class=\"k\">return</span> <span class=\"n\">arr</span>\n</code></pre>\n</div>\n\n<p>Note how <code>typecaster_factory</code> is used here once we are back to a type that can be handled by the built-in functionality again.\nInternally, each <code>TypeCaster</code> casts one origin type hint and calls <code>typecaster_factory</code> again for the next hint. This way you will only have\nto add minimal code.</p>\n\n<h1 id=\"caveats\">Caveats</h1>\n\n<ul>\n<li>For Union, the order matters. Typecasting will be attempted in the specified order.\ne.g. if you provide <code>int | float</code> and pass <code>1.2</code>, the casted result will be <code>1</code>. To omit this specify float first, or register an <code>IntTypeCaster</code> which fails in such cases.\nThis also happens for <code>list | tuple</code> for example. Passing <code>(1, 2)</code> will resulkt in <code>[1, 2]</code>. Either specify the type you want to default to first, or implement your own specific handler.</li>\n</ul>\n"}, "fancy_signatures.api": {"fullname": "fancy_signatures.api", "modulename": "fancy_signatures.api", "kind": "module", "doc": "<p></p>\n"}, "fancy_signatures.api.arg": {"fullname": "fancy_signatures.api.arg", "modulename": "fancy_signatures.api", "qualname": "arg", "kind": "function", "doc": "<p>A function argument</p>\n\n<p>Args:\n    validators (list[Validator] | None, optional): Validators to apply to this argument. Defaults to None.\n    default (Default | None, optional): Default value for this argument. Defaults to None.\n    required (bool, optional): Whether the argument is required, if not it will default to __EmptyArg__().\n    Defaults to True.</p>\n\n<p>Returns:\n    UnTypedArgField: Container class for processing the field when the decorated function is called.\n    Type hint is <code>Any</code>vto avoid linter issues when using <code>arg</code> as default for a typehinted parameter.\n    (<code>a: int = arg()</code> would fail)</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">validators</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">fancy_signatures</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">Validator</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">default</span><span class=\"p\">:</span> <span class=\"n\">fancy_signatures</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">Default</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">required</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.api.validate": {"fullname": "fancy_signatures.api.validate", "modulename": "fancy_signatures.api", "qualname": "validate", "kind": "function", "doc": "<p>Validate the functions annotated parameters with the provided 'Validators'.</p>\n\n<p>Args:\n    __func (FuncT, optional): The decorated callable\n    lazy (bool, optional): Whether to immediately raise <code>ValidationErrors</code> once they occur,\n    or collect them in a <code>ValidationErrorGroup</code>.\n    or whether to validate all parameters and raise an ExceptionGroup with the errors found per parameter.\n    Defaults to False.\n    Related (list[Related], optional): Related validators that apply a validation function on two or more arguments.\n    Defaults to None\n    type_strict (bool, optional): Whether to raise an error if a typecheck fails, or attempt a typecast first</p>\n\n<p>Raises:\n    ValidationError: error that occurred during validation of parameters\n    ValidationErrorGroup: group of validation errors</p>\n\n<p>Returns:\n    Callable[[FuncT], FuncT]: the decorated callable</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">__func</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">~</span><span class=\"n\">FuncT</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span>,</span><span class=\"param\">\t<span class=\"n\">related</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">fancy_signatures</span><span class=\"o\">.</span><span class=\"n\">validation</span><span class=\"o\">.</span><span class=\"n\">related</span><span class=\"o\">.</span><span class=\"n\">related</span><span class=\"o\">.</span><span class=\"n\">Related</span><span class=\"p\">]</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">lazy</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">type_strict</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"o\">~</span><span class=\"n\">FuncT</span><span class=\"p\">],</span> <span class=\"o\">~</span><span class=\"n\">FuncT</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.core": {"fullname": "fancy_signatures.core", "modulename": "fancy_signatures.core", "kind": "module", "doc": "<p></p>\n"}, "fancy_signatures.core.empty": {"fullname": "fancy_signatures.core.empty", "modulename": "fancy_signatures.core.empty", "kind": "module", "doc": "<p></p>\n"}, "fancy_signatures.core.empty.is_empty": {"fullname": "fancy_signatures.core.empty.is_empty", "modulename": "fancy_signatures.core.empty", "qualname": "is_empty", "kind": "function", "doc": "<p>Return whether a variable is 'empty'.\nIn the context of fancy_signatures this means it's an instance\nof <code>__EmptyArg__</code>.</p>\n\n<p>Args:\n    param (Any): The parameter to check</p>\n\n<p>Returns:\n    bool: True if it's empty, else False</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">param</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.core.field": {"fullname": "fancy_signatures.core.field", "modulename": "fancy_signatures.core.field", "kind": "module", "doc": "<p></p>\n"}, "fancy_signatures.core.field.UnTypedArgField": {"fullname": "fancy_signatures.core.field.UnTypedArgField", "modulename": "fancy_signatures.core.field", "qualname": "UnTypedArgField", "kind": "class", "doc": "<p></p>\n"}, "fancy_signatures.core.field.UnTypedArgField.__init__": {"fullname": "fancy_signatures.core.field.UnTypedArgField.__init__", "modulename": "fancy_signatures.core.field", "qualname": "UnTypedArgField.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">required</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">default</span><span class=\"p\">:</span> <span class=\"n\">fancy_signatures</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">Default</span>,</span><span class=\"param\">\t<span class=\"n\">validators</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">fancy_signatures</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">Validator</span><span class=\"p\">]</span></span>)</span>"}, "fancy_signatures.core.field.UnTypedArgField.set_type": {"fullname": "fancy_signatures.core.field.UnTypedArgField.set_type", "modulename": "fancy_signatures.core.field", "qualname": "UnTypedArgField.set_type", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">typecaster</span><span class=\"p\">:</span> <span class=\"n\">fancy_signatures</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">TypeCaster</span></span><span class=\"return-annotation\">) -> <span class=\"n\">fancy_signatures</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">TypedArgField</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.core.field.TypedArgField": {"fullname": "fancy_signatures.core.field.TypedArgField", "modulename": "fancy_signatures.core.field", "qualname": "TypedArgField", "kind": "class", "doc": "<p></p>\n", "bases": "UnTypedArgField"}, "fancy_signatures.core.field.TypedArgField.__init__": {"fullname": "fancy_signatures.core.field.TypedArgField.__init__", "modulename": "fancy_signatures.core.field", "qualname": "TypedArgField.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">required</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>,</span><span class=\"param\">\t<span class=\"n\">default</span><span class=\"p\">:</span> <span class=\"n\">fancy_signatures</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">Default</span>,</span><span class=\"param\">\t<span class=\"n\">typecaster</span><span class=\"p\">:</span> <span class=\"n\">fancy_signatures</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">TypeCaster</span>,</span><span class=\"param\">\t<span class=\"n\">validators</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">fancy_signatures</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">Validator</span><span class=\"p\">]</span></span>)</span>"}, "fancy_signatures.core.field.TypedArgField.execute": {"fullname": "fancy_signatures.core.field.TypedArgField.execute", "modulename": "fancy_signatures.core.field", "qualname": "TypedArgField.execute", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span>, </span><span class=\"param\"><span class=\"n\">lazy</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>, </span><span class=\"param\"><span class=\"n\">strict</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.core.interface": {"fullname": "fancy_signatures.core.interface", "modulename": "fancy_signatures.core.interface", "kind": "module", "doc": "<p></p>\n"}, "fancy_signatures.core.interface.Validator": {"fullname": "fancy_signatures.core.interface.Validator", "modulename": "fancy_signatures.core.interface", "qualname": "Validator", "kind": "class", "doc": "<p>Validator for an argument passed to a function or method</p>\n", "bases": "typing.Generic[~T], abc.ABC"}, "fancy_signatures.core.interface.Validator.validate": {"fullname": "fancy_signatures.core.interface.Validator.validate", "modulename": "fancy_signatures.core.interface", "qualname": "Validator.validate", "kind": "function", "doc": "<p>Validate an argument</p>\n\n<p>If the validation fails <code>fancy_signatures.exceptions.ValidatorFailed</code> shoud be raised.\nIn case of no errors, the input value should be returned</p>\n\n<p>Args:\n    obj (T): The input value</p>\n\n<p>Returns:\n    T: The validated argument itself</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">T</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">T</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.core.interface.Default": {"fullname": "fancy_signatures.core.interface.Default", "modulename": "fancy_signatures.core.interface", "qualname": "Default", "kind": "class", "doc": "<p>Construct a default value for a function or method argument</p>\n\n<p>Returns:\n    _type_: The default or the value provided</p>\n", "bases": "typing.Generic[~T], abc.ABC"}, "fancy_signatures.core.interface.Default.get": {"fullname": "fancy_signatures.core.interface.Default.get", "modulename": "fancy_signatures.core.interface", "qualname": "Default.get", "kind": "function", "doc": "<p>Analyze the input value and return the input value itself or the default</p>\n\n<p>Args:\n    value (Any): The input value</p>\n\n<p>Returns:\n    T: _description_</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">T</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.core.interface.TypeCaster": {"fullname": "fancy_signatures.core.interface.TypeCaster", "modulename": "fancy_signatures.core.interface", "qualname": "TypeCaster", "kind": "class", "doc": "<p>Object to validate an arguments type and/or cast it to the correct type</p>\n", "bases": "typing.Generic[~T], abc.ABC"}, "fancy_signatures.core.interface.TypeCaster.validate": {"fullname": "fancy_signatures.core.interface.TypeCaster.validate", "modulename": "fancy_signatures.core.interface", "qualname": "TypeCaster.validate", "kind": "function", "doc": "<p>Validate if a given parameter is of the correct type (adheres to the given type hint)</p>\n\n<p>Args:\n    param_value (Any): The actual value</p>\n\n<p>Returns:\n    bool: <code>True</code> if the type is correct <code>False</code> otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">param_value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.core.interface.TypeCaster.cast": {"fullname": "fancy_signatures.core.interface.TypeCaster.cast", "modulename": "fancy_signatures.core.interface", "qualname": "TypeCaster.cast", "kind": "function", "doc": "<p>Attempt to cast a value to the correct type.\nIf the typecast fails, a <code>fancy_signatures.exceptions.TypeCastError</code> should be raised</p>\n\n<p>Args:\n    param_value (Any): The current value</p>\n\n<p>Returns:\n    T: typecasted value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">param_value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">T</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.default": {"fullname": "fancy_signatures.default", "modulename": "fancy_signatures.default", "kind": "module", "doc": "<p></p>\n"}, "fancy_signatures.default.defaults": {"fullname": "fancy_signatures.default.defaults", "modulename": "fancy_signatures.default.defaults", "kind": "module", "doc": "<p></p>\n"}, "fancy_signatures.default.defaults.FactoryFunc": {"fullname": "fancy_signatures.default.defaults.FactoryFunc", "modulename": "fancy_signatures.default.defaults", "qualname": "FactoryFunc", "kind": "variable", "doc": "<p></p>\n", "default_value": "typing.Callable[[], typing.Any]"}, "fancy_signatures.default.defaults.DefaultValue": {"fullname": "fancy_signatures.default.defaults.DefaultValue", "modulename": "fancy_signatures.default.defaults", "qualname": "DefaultValue", "kind": "class", "doc": "<p>Construct a default value for a function or method argument</p>\n\n<p>Returns:\n    _type_: The default or the value provided</p>\n", "bases": "fancy_signatures.core.interface.Default[~T]"}, "fancy_signatures.default.defaults.DefaultValue.__init__": {"fullname": "fancy_signatures.default.defaults.DefaultValue.__init__", "modulename": "fancy_signatures.default.defaults", "qualname": "DefaultValue.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">fancy_signatures</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">empty</span><span class=\"o\">.</span><span class=\"n\">__EmptyArg__</span> <span class=\"nb\">object</span><span class=\"o\">&gt;</span></span>)</span>"}, "fancy_signatures.default.defaults.DefaultValue.get": {"fullname": "fancy_signatures.default.defaults.DefaultValue.get", "modulename": "fancy_signatures.default.defaults", "qualname": "DefaultValue.get", "kind": "function", "doc": "<p>Analyze the input value and return the input value itself or the default</p>\n\n<p>Args:\n    value (Any): The input value</p>\n\n<p>Returns:\n    T: _description_</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">T</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">T</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.default.defaults.DefaultFactory": {"fullname": "fancy_signatures.default.defaults.DefaultFactory", "modulename": "fancy_signatures.default.defaults", "qualname": "DefaultFactory", "kind": "class", "doc": "<p>Construct a default value for a function or method argument</p>\n\n<p>Returns:\n    _type_: The default or the value provided</p>\n", "bases": "fancy_signatures.core.interface.Default[~T]"}, "fancy_signatures.default.defaults.DefaultFactory.__init__": {"fullname": "fancy_signatures.default.defaults.DefaultFactory.__init__", "modulename": "fancy_signatures.default.defaults", "qualname": "DefaultFactory.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\tfactory_func: Callable[[], Any] = &lt;class &#x27;fancy_signatures.core.empty.__EmptyArg__&#x27;&gt;</span>)</span>"}, "fancy_signatures.default.defaults.DefaultFactory.get": {"fullname": "fancy_signatures.default.defaults.DefaultFactory.get", "modulename": "fancy_signatures.default.defaults", "qualname": "DefaultFactory.get", "kind": "function", "doc": "<p>Analyze the input value and return the input value itself or the default</p>\n\n<p>Args:\n    value (Any): The input value</p>\n\n<p>Returns:\n    T: _description_</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">T</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">T</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.default.defaults.EmptyList": {"fullname": "fancy_signatures.default.defaults.EmptyList", "modulename": "fancy_signatures.default.defaults", "qualname": "EmptyList", "kind": "variable", "doc": "<p></p>\n", "annotation": ": fancy_signatures.default.defaults.DefaultFactory[list]", "default_value": "&lt;fancy_signatures.default.defaults.DefaultFactory object&gt;"}, "fancy_signatures.default.defaults.EmptyDict": {"fullname": "fancy_signatures.default.defaults.EmptyDict", "modulename": "fancy_signatures.default.defaults", "qualname": "EmptyDict", "kind": "variable", "doc": "<p></p>\n", "annotation": ": fancy_signatures.default.defaults.DefaultFactory[dict]", "default_value": "&lt;fancy_signatures.default.defaults.DefaultFactory object&gt;"}, "fancy_signatures.default.defaults.EmptyTuple": {"fullname": "fancy_signatures.default.defaults.EmptyTuple", "modulename": "fancy_signatures.default.defaults", "qualname": "EmptyTuple", "kind": "variable", "doc": "<p></p>\n", "annotation": ": fancy_signatures.default.defaults.DefaultFactory[tuple]", "default_value": "&lt;fancy_signatures.default.defaults.DefaultFactory object&gt;"}, "fancy_signatures.default.defaults.EmptySet": {"fullname": "fancy_signatures.default.defaults.EmptySet", "modulename": "fancy_signatures.default.defaults", "qualname": "EmptySet", "kind": "variable", "doc": "<p></p>\n", "annotation": ": fancy_signatures.default.defaults.DefaultFactory[set]", "default_value": "&lt;fancy_signatures.default.defaults.DefaultFactory object&gt;"}, "fancy_signatures.exceptions": {"fullname": "fancy_signatures.exceptions", "modulename": "fancy_signatures.exceptions", "kind": "module", "doc": "<p></p>\n"}, "fancy_signatures.exceptions.ValidationError": {"fullname": "fancy_signatures.exceptions.ValidationError", "modulename": "fancy_signatures.exceptions", "qualname": "ValidationError", "kind": "class", "doc": "<p>Common base class for all non-exit exceptions.</p>\n", "bases": "builtins.Exception"}, "fancy_signatures.exceptions.ValidationError.__init__": {"fullname": "fancy_signatures.exceptions.ValidationError.__init__", "modulename": "fancy_signatures.exceptions", "qualname": "ValidationError.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">param</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span>)</span>"}, "fancy_signatures.settings": {"fullname": "fancy_signatures.settings", "modulename": "fancy_signatures.settings", "kind": "module", "doc": "<p></p>\n"}, "fancy_signatures.settings.reset": {"fullname": "fancy_signatures.settings.reset", "modulename": "fancy_signatures.settings", "qualname": "reset", "kind": "function", "doc": "<p>Reset all settings to their default values</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.settings.set": {"fullname": "fancy_signatures.settings.set", "modulename": "fancy_signatures.settings", "qualname": "set", "kind": "function", "doc": "<p>Change a setting value</p>\n\n<p>Args:\n    setting (str): The name of the setting (case insensitive)\n    value (Any): The new value of the setting</p>\n\n<p>Raises:\n    ValueError: If setting doesn't exist</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">setting</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.settings.get_typecast_handlers": {"fullname": "fancy_signatures.settings.get_typecast_handlers", "modulename": "fancy_signatures.settings", "qualname": "get_typecast_handlers", "kind": "function", "doc": "<p>Get all the current registered typecasters a a dictionairy</p>\n\n<p>Returns:\n    dict[str, dict[TypeAlias, type[TypeCaster]]]: Dict containing the stict and non strict handlers</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"return-annotation\">) -> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">TypeAlias</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">[</span><span class=\"n\">fancy_signatures</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">TypeCaster</span><span class=\"p\">]]]</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.settings.ProtocolHandlingLevel": {"fullname": "fancy_signatures.settings.ProtocolHandlingLevel", "modulename": "fancy_signatures.settings", "qualname": "ProtocolHandlingLevel", "kind": "class", "doc": "<p>Create a collection of name/value pairs.</p>\n\n<p>Example enumeration:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Color</span><span class=\"p\">(</span><span class=\"n\">Enum</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"n\">RED</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">... </span>    <span class=\"n\">BLUE</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"gp\">... </span>    <span class=\"n\">GREEN</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre>\n</div>\n\n<p>Access them by:</p>\n\n<ul>\n<li>attribute access::</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"o\">.</span><span class=\"n\">RED</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>value lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<ul>\n<li>name lookup:</li>\n</ul>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Color</span><span class=\"p\">[</span><span class=\"s1\">&#39;RED&#39;</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Color.RED: 1&gt;</span>\n</code></pre>\n</div>\n\n<p>Enumerations can be iterated over, and know how many members they have:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">3</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">Color</span><span class=\"p\">)</span>\n<span class=\"go\">[&lt;Color.RED: 1&gt;, &lt;Color.BLUE: 2&gt;, &lt;Color.GREEN: 3&gt;]</span>\n</code></pre>\n</div>\n\n<p>Methods can be added to enumerations, and members can have their own\nattributes -- see the documentation for details.</p>\n", "bases": "enum.Enum"}, "fancy_signatures.settings.ProtocolHandlingLevel.ALLOW": {"fullname": "fancy_signatures.settings.ProtocolHandlingLevel.ALLOW", "modulename": "fancy_signatures.settings", "qualname": "ProtocolHandlingLevel.ALLOW", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ProtocolHandlingLevel.ALLOW: &#x27;ALLOW&#x27;&gt;"}, "fancy_signatures.settings.ProtocolHandlingLevel.WARN": {"fullname": "fancy_signatures.settings.ProtocolHandlingLevel.WARN", "modulename": "fancy_signatures.settings", "qualname": "ProtocolHandlingLevel.WARN", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ProtocolHandlingLevel.WARN: &#x27;WARN&#x27;&gt;"}, "fancy_signatures.settings.ProtocolHandlingLevel.DISALLOW": {"fullname": "fancy_signatures.settings.ProtocolHandlingLevel.DISALLOW", "modulename": "fancy_signatures.settings", "qualname": "ProtocolHandlingLevel.DISALLOW", "kind": "variable", "doc": "<p></p>\n", "default_value": "&lt;ProtocolHandlingLevel.DISALLOW: &#x27;DISALLOW&#x27;&gt;"}, "fancy_signatures.typecasting": {"fullname": "fancy_signatures.typecasting", "modulename": "fancy_signatures.typecasting", "kind": "module", "doc": "<p></p>\n"}, "fancy_signatures.typecasting.default": {"fullname": "fancy_signatures.typecasting.default", "modulename": "fancy_signatures.typecasting.default", "kind": "module", "doc": "<p></p>\n"}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"fullname": "fancy_signatures.typecasting.default.DefaultTypeCaster", "modulename": "fancy_signatures.typecasting.default", "qualname": "DefaultTypeCaster", "kind": "class", "doc": "<p>Default typecaster. If no TypeCaster implementation is found this is the fallback.</p>\n\n<p>Check if the parameter value is a dict, tuple or list. If so try to unpack.\nOtherwise call <code>self._type_hint</code> with the given parameter.</p>\n", "bases": "fancy_signatures.core.interface.TypeCaster[typing.Any]"}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"fullname": "fancy_signatures.typecasting.default.DefaultTypeCaster.validate", "modulename": "fancy_signatures.typecasting.default", "qualname": "DefaultTypeCaster.validate", "kind": "function", "doc": "<p>Validate if a given parameter is of the correct type (adheres to the given type hint)</p>\n\n<p>Args:\n    param_value (Any): The actual value</p>\n\n<p>Returns:\n    bool: <code>True</code> if the type is correct <code>False</code> otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">param_value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"fullname": "fancy_signatures.typecasting.default.DefaultTypeCaster.cast", "modulename": "fancy_signatures.typecasting.default", "qualname": "DefaultTypeCaster.cast", "kind": "function", "doc": "<p>Attempt to cast a value to the correct type.\nIf the typecast fails, a <code>fancy_signatures.exceptions.TypeCastError</code> should be raised</p>\n\n<p>Args:\n    param_value (Any): The current value</p>\n\n<p>Returns:\n    T: typecasted value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">param_value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.typecasting.factory": {"fullname": "fancy_signatures.typecasting.factory", "modulename": "fancy_signatures.typecasting.factory", "kind": "module", "doc": "<p></p>\n"}, "fancy_signatures.typecasting.factory.typecaster_factory": {"fullname": "fancy_signatures.typecasting.factory.typecaster_factory", "modulename": "fancy_signatures.typecasting.factory", "qualname": "typecaster_factory", "kind": "function", "doc": "<p>Create a TypeCaster for the given type hint</p>\n\n<p>First; strict handlers are considered (the type_hint exactly matches the type of the handler)\nSecondly; handlers are considered (the type hint is a subclass of the handler type)\nLastly; a default TypeCaster is used.</p>\n\n<p>Args:\n    type_hint (TypeAlias): the type hint</p>\n\n<p>Returns:\n    TypeCaster: TypeCaster instance that can be used to validate a given parameter and\n    attempt to cast it to the correct type.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">type_hint</span><span class=\"p\">:</span> <span class=\"n\">TypeAlias</span></span><span class=\"return-annotation\">) -> <span class=\"n\">fancy_signatures</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">TypeCaster</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.typecasting.generic_alias": {"fullname": "fancy_signatures.typecasting.generic_alias", "modulename": "fancy_signatures.typecasting.generic_alias", "kind": "module", "doc": "<p></p>\n"}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"fullname": "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster", "modulename": "fancy_signatures.typecasting.generic_alias", "qualname": "ListTupleSetTypeCaster", "kind": "class", "doc": "<p>Object to validate an arguments type and/or cast it to the correct type</p>\n", "bases": "fancy_signatures.core.interface.TypeCaster[list | tuple | set]"}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.__init__": {"fullname": "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.__init__", "modulename": "fancy_signatures.typecasting.generic_alias", "qualname": "ListTupleSetTypeCaster.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">type_hint</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span>)</span>"}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"fullname": "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate", "modulename": "fancy_signatures.typecasting.generic_alias", "qualname": "ListTupleSetTypeCaster.validate", "kind": "function", "doc": "<p>Validate if a given parameter is of the correct type (adheres to the given type hint)</p>\n\n<p>Args:\n    param_value (Any): The actual value</p>\n\n<p>Returns:\n    bool: <code>True</code> if the type is correct <code>False</code> otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">param_value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"fullname": "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast", "modulename": "fancy_signatures.typecasting.generic_alias", "qualname": "ListTupleSetTypeCaster.cast", "kind": "function", "doc": "<p>Attempt to cast a value to the correct type.\nIf the typecast fails, a <code>fancy_signatures.exceptions.TypeCastError</code> should be raised</p>\n\n<p>Args:\n    param_value (Any): The current value</p>\n\n<p>Returns:\n    T: typecasted value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">param_value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span> <span class=\"o\">|</span> <span class=\"nb\">tuple</span> <span class=\"o\">|</span> <span class=\"nb\">set</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster": {"fullname": "fancy_signatures.typecasting.generic_alias.DictTypeCaster", "modulename": "fancy_signatures.typecasting.generic_alias", "qualname": "DictTypeCaster", "kind": "class", "doc": "<p>Object to validate an arguments type and/or cast it to the correct type</p>\n", "bases": "fancy_signatures.core.interface.TypeCaster[dict]"}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.__init__": {"fullname": "fancy_signatures.typecasting.generic_alias.DictTypeCaster.__init__", "modulename": "fancy_signatures.typecasting.generic_alias", "qualname": "DictTypeCaster.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">type_hint</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span>)</span>"}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"fullname": "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate", "modulename": "fancy_signatures.typecasting.generic_alias", "qualname": "DictTypeCaster.validate", "kind": "function", "doc": "<p>Validate if a given parameter is of the correct type (adheres to the given type hint)</p>\n\n<p>Args:\n    param_value (Any): The actual value</p>\n\n<p>Returns:\n    bool: <code>True</code> if the type is correct <code>False</code> otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">param_value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"fullname": "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast", "modulename": "fancy_signatures.typecasting.generic_alias", "qualname": "DictTypeCaster.cast", "kind": "function", "doc": "<p>Attempt to cast a value to the correct type.\nIf the typecast fails, a <code>fancy_signatures.exceptions.TypeCastError</code> should be raised</p>\n\n<p>Args:\n    param_value (Any): The current value</p>\n\n<p>Returns:\n    T: typecasted value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">param_value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.typecasting.handlers": {"fullname": "fancy_signatures.typecasting.handlers", "modulename": "fancy_signatures.typecasting.handlers", "kind": "module", "doc": "<p></p>\n"}, "fancy_signatures.typecasting.handlers.register_handler": {"fullname": "fancy_signatures.typecasting.handlers.register_handler", "modulename": "fancy_signatures.typecasting.handlers", "qualname": "register_handler", "kind": "function", "doc": "<p>Register a TypeCaster object that handles a set of type hints.</p>\n\n<p>Args:\n    type_hints (list[TypeAlias]): the type hints supported by this handler\n    handler (Type[TypeCaster]): the TypeCaster to handle the value\n    strict (bool): Whether the caster is invoked only if the type matches exactly (True)\n    or if it's also invoked for all subclasses of type_hints</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">type_hints</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"n\">typing</span><span class=\"o\">.</span><span class=\"n\">TypeAlias</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">handler</span><span class=\"p\">:</span> <span class=\"n\">Type</span><span class=\"p\">[</span><span class=\"n\">fancy_signatures</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">interface</span><span class=\"o\">.</span><span class=\"n\">TypeCaster</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">strict</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.typecasting.handlers.unregister_handler": {"fullname": "fancy_signatures.typecasting.handlers.unregister_handler", "modulename": "fancy_signatures.typecasting.handlers", "qualname": "unregister_handler", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">type_hint</span><span class=\"p\">:</span> <span class=\"n\">TypeAlias</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.typecasting.handlers.unregister_strict_handler": {"fullname": "fancy_signatures.typecasting.handlers.unregister_strict_handler", "modulename": "fancy_signatures.typecasting.handlers", "qualname": "unregister_strict_handler", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">type_hint</span><span class=\"p\">:</span> <span class=\"n\">TypeAlias</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.typecasting.special_origins": {"fullname": "fancy_signatures.typecasting.special_origins", "modulename": "fancy_signatures.typecasting.special_origins", "kind": "module", "doc": "<p></p>\n"}, "fancy_signatures.typecasting.special_origins.StringTypeCaster": {"fullname": "fancy_signatures.typecasting.special_origins.StringTypeCaster", "modulename": "fancy_signatures.typecasting.special_origins", "qualname": "StringTypeCaster", "kind": "class", "doc": "<p>Object to validate an arguments type and/or cast it to the correct type</p>\n", "bases": "fancy_signatures.core.interface.TypeCaster[str]"}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"fullname": "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate", "modulename": "fancy_signatures.typecasting.special_origins", "qualname": "StringTypeCaster.validate", "kind": "function", "doc": "<p>Validate if a given parameter is of the correct type (adheres to the given type hint)</p>\n\n<p>Args:\n    param_value (Any): The actual value</p>\n\n<p>Returns:\n    bool: <code>True</code> if the type is correct <code>False</code> otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">param_value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"fullname": "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast", "modulename": "fancy_signatures.typecasting.special_origins", "qualname": "StringTypeCaster.cast", "kind": "function", "doc": "<p>Attempt to cast a value to the correct type.\nIf the typecast fails, a <code>fancy_signatures.exceptions.TypeCastError</code> should be raised</p>\n\n<p>Args:\n    param_value (Any): The current value</p>\n\n<p>Returns:\n    T: typecasted value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">param_value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster": {"fullname": "fancy_signatures.typecasting.special_origins.AnyTypeCaster", "modulename": "fancy_signatures.typecasting.special_origins", "qualname": "AnyTypeCaster", "kind": "class", "doc": "<p>Object to validate an arguments type and/or cast it to the correct type</p>\n", "bases": "fancy_signatures.core.interface.TypeCaster[typing.Any]"}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"fullname": "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate", "modulename": "fancy_signatures.typecasting.special_origins", "qualname": "AnyTypeCaster.validate", "kind": "function", "doc": "<p>Validate if a given parameter is of the correct type (adheres to the given type hint)</p>\n\n<p>Args:\n    param_value (Any): The actual value</p>\n\n<p>Returns:\n    bool: <code>True</code> if the type is correct <code>False</code> otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">_</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"fullname": "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast", "modulename": "fancy_signatures.typecasting.special_origins", "qualname": "AnyTypeCaster.cast", "kind": "function", "doc": "<p>Attempt to cast a value to the correct type.\nIf the typecast fails, a <code>fancy_signatures.exceptions.TypeCastError</code> should be raised</p>\n\n<p>Args:\n    param_value (Any): The current value</p>\n\n<p>Returns:\n    T: typecasted value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">param_value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster": {"fullname": "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster", "modulename": "fancy_signatures.typecasting.special_origins", "qualname": "AnnotatedTypeCaster", "kind": "class", "doc": "<p>Object to validate an arguments type and/or cast it to the correct type</p>\n", "bases": "fancy_signatures.core.interface.TypeCaster[typing._AnnotatedAlias]"}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.__init__": {"fullname": "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.__init__", "modulename": "fancy_signatures.typecasting.special_origins", "qualname": "AnnotatedTypeCaster.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">type_hint</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span>)</span>"}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"fullname": "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate", "modulename": "fancy_signatures.typecasting.special_origins", "qualname": "AnnotatedTypeCaster.validate", "kind": "function", "doc": "<p>Validate if a given parameter is of the correct type (adheres to the given type hint)</p>\n\n<p>Args:\n    param_value (Any): The actual value</p>\n\n<p>Returns:\n    bool: <code>True</code> if the type is correct <code>False</code> otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">param_value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"fullname": "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast", "modulename": "fancy_signatures.typecasting.special_origins", "qualname": "AnnotatedTypeCaster.cast", "kind": "function", "doc": "<p>Attempt to cast a value to the correct type.\nIf the typecast fails, a <code>fancy_signatures.exceptions.TypeCastError</code> should be raised</p>\n\n<p>Args:\n    param_value (Any): The current value</p>\n\n<p>Returns:\n    T: typecasted value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">param_value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Any</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster": {"fullname": "fancy_signatures.typecasting.special_origins.BooleanTypeCaster", "modulename": "fancy_signatures.typecasting.special_origins", "qualname": "BooleanTypeCaster", "kind": "class", "doc": "<p>Object to validate an arguments type and/or cast it to the correct type</p>\n", "bases": "fancy_signatures.core.interface.TypeCaster[bool]"}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"fullname": "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate", "modulename": "fancy_signatures.typecasting.special_origins", "qualname": "BooleanTypeCaster.validate", "kind": "function", "doc": "<p>Validate if a given parameter is of the correct type (adheres to the given type hint)</p>\n\n<p>Args:\n    param_value (Any): The actual value</p>\n\n<p>Returns:\n    bool: <code>True</code> if the type is correct <code>False</code> otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">param_value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"fullname": "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast", "modulename": "fancy_signatures.typecasting.special_origins", "qualname": "BooleanTypeCaster.cast", "kind": "function", "doc": "<p>Attempt to cast a value to the correct type.\nIf the typecast fails, a <code>fancy_signatures.exceptions.TypeCastError</code> should be raised</p>\n\n<p>Args:\n    param_value (Any): The current value</p>\n\n<p>Returns:\n    T: typecasted value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">param_value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster": {"fullname": "fancy_signatures.typecasting.special_origins.NoneTypeCaster", "modulename": "fancy_signatures.typecasting.special_origins", "qualname": "NoneTypeCaster", "kind": "class", "doc": "<p>Object to validate an arguments type and/or cast it to the correct type</p>\n", "bases": "fancy_signatures.core.interface.TypeCaster[NoneType]"}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"fullname": "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate", "modulename": "fancy_signatures.typecasting.special_origins", "qualname": "NoneTypeCaster.validate", "kind": "function", "doc": "<p>Validate if a given parameter is of the correct type (adheres to the given type hint)</p>\n\n<p>Args:\n    param_value (Any): The actual value</p>\n\n<p>Returns:\n    bool: <code>True</code> if the type is correct <code>False</code> otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">param_value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"fullname": "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast", "modulename": "fancy_signatures.typecasting.special_origins", "qualname": "NoneTypeCaster.cast", "kind": "function", "doc": "<p>Attempt to cast a value to the correct type.\nIf the typecast fails, a <code>fancy_signatures.exceptions.TypeCastError</code> should be raised</p>\n\n<p>Args:\n    param_value (Any): The current value</p>\n\n<p>Returns:\n    T: typecasted value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">param_value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster": {"fullname": "fancy_signatures.typecasting.special_origins.ProtocolTypecaster", "modulename": "fancy_signatures.typecasting.special_origins", "qualname": "ProtocolTypecaster", "kind": "class", "doc": "<p>Object to validate an arguments type and/or cast it to the correct type</p>\n", "bases": "fancy_signatures.core.interface.TypeCaster[typing._ProtocolMeta]"}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.__init__": {"fullname": "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.__init__", "modulename": "fancy_signatures.typecasting.special_origins", "qualname": "ProtocolTypecaster.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">type_hint</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span>)</span>"}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"fullname": "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate", "modulename": "fancy_signatures.typecasting.special_origins", "qualname": "ProtocolTypecaster.validate", "kind": "function", "doc": "<p>Validate if a given parameter is of the correct type (adheres to the given type hint)</p>\n\n<p>Args:\n    param_value (Any): The actual value</p>\n\n<p>Returns:\n    bool: <code>True</code> if the type is correct <code>False</code> otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">param_value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"fullname": "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast", "modulename": "fancy_signatures.typecasting.special_origins", "qualname": "ProtocolTypecaster.cast", "kind": "function", "doc": "<p>Attempt to cast a value to the correct type.\nIf the typecast fails, a <code>fancy_signatures.exceptions.TypeCastError</code> should be raised</p>\n\n<p>Args:\n    param_value (Any): The current value</p>\n\n<p>Returns:\n    T: typecasted value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">_</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> &lt;class &#x27;_ProtocolMeta&#x27;&gt;:</span></span>", "funcdef": "def"}, "fancy_signatures.typecasting.union": {"fullname": "fancy_signatures.typecasting.union", "modulename": "fancy_signatures.typecasting.union", "kind": "module", "doc": "<p></p>\n"}, "fancy_signatures.typecasting.union.UnionTypeCaster": {"fullname": "fancy_signatures.typecasting.union.UnionTypeCaster", "modulename": "fancy_signatures.typecasting.union", "qualname": "UnionTypeCaster", "kind": "class", "doc": "<p>Object to validate an arguments type and/or cast it to the correct type</p>\n", "bases": "fancy_signatures.core.interface.TypeCaster[types.UnionType]"}, "fancy_signatures.typecasting.union.UnionTypeCaster.__init__": {"fullname": "fancy_signatures.typecasting.union.UnionTypeCaster.__init__", "modulename": "fancy_signatures.typecasting.union", "qualname": "UnionTypeCaster.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">type_hint</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span>)</span>"}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"fullname": "fancy_signatures.typecasting.union.UnionTypeCaster.validate", "modulename": "fancy_signatures.typecasting.union", "qualname": "UnionTypeCaster.validate", "kind": "function", "doc": "<p>Validate if a given parameter is of the correct type (adheres to the given type hint)</p>\n\n<p>Args:\n    param_value (Any): The actual value</p>\n\n<p>Returns:\n    bool: <code>True</code> if the type is correct <code>False</code> otherwise.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">param_value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"fullname": "fancy_signatures.typecasting.union.UnionTypeCaster.cast", "modulename": "fancy_signatures.typecasting.union", "qualname": "UnionTypeCaster.cast", "kind": "function", "doc": "<p>Attempt to cast a value to the correct type.\nIf the typecast fails, a <code>fancy_signatures.exceptions.TypeCastError</code> should be raised</p>\n\n<p>Args:\n    param_value (Any): The current value</p>\n\n<p>Returns:\n    T: typecasted value</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">param_value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span><span class=\"return-annotation\">) -> <span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">UnionType</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.validation": {"fullname": "fancy_signatures.validation", "modulename": "fancy_signatures.validation", "kind": "module", "doc": "<p></p>\n"}, "fancy_signatures.validation.mixins": {"fullname": "fancy_signatures.validation.mixins", "modulename": "fancy_signatures.validation.mixins", "kind": "module", "doc": "<p></p>\n"}, "fancy_signatures.validation.mixins.AllowOptionalMixin": {"fullname": "fancy_signatures.validation.mixins.AllowOptionalMixin", "modulename": "fancy_signatures.validation.mixins", "qualname": "AllowOptionalMixin", "kind": "class", "doc": "<p>MixIn to make a validator allow 'None'.</p>\n", "bases": "fancy_signatures.core.interface.Validator[typing.Optional[~T]]"}, "fancy_signatures.validation.related": {"fullname": "fancy_signatures.validation.related", "modulename": "fancy_signatures.validation.related", "kind": "module", "doc": "<p></p>\n"}, "fancy_signatures.validation.related.related": {"fullname": "fancy_signatures.validation.related.related", "modulename": "fancy_signatures.validation.related.related", "kind": "module", "doc": "<p></p>\n"}, "fancy_signatures.validation.related.related.Related": {"fullname": "fancy_signatures.validation.related.related.Related", "modulename": "fancy_signatures.validation.related.related", "qualname": "Related", "kind": "class", "doc": "<p></p>\n"}, "fancy_signatures.validation.related.related.Related.__init__": {"fullname": "fancy_signatures.validation.related.related.Related.__init__", "modulename": "fancy_signatures.validation.related.related", "qualname": "Related.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">func</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, "fancy_signatures.validation.related.validators": {"fullname": "fancy_signatures.validation.related.validators", "modulename": "fancy_signatures.validation.related.validators", "kind": "module", "doc": "<p></p>\n"}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"fullname": "fancy_signatures.validation.related.validators.mutually_exclusive_args", "modulename": "fancy_signatures.validation.related.validators", "qualname": "mutually_exclusive_args", "kind": "function", "doc": "<p>Validate only one (or none) of the parameters is provided.\n__EmptyArg__() is considered as not provided.</p>\n\n<p>Args:\n    allow_none (bool, optional): Whether to consider <code>None</code> as not provided. Defaults to True.</p>\n\n<p>Returns:\n    Related: Related object which can be provided to @validate</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">allow_none</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">fancy_signatures</span><span class=\"o\">.</span><span class=\"n\">validation</span><span class=\"o\">.</span><span class=\"n\">related</span><span class=\"o\">.</span><span class=\"n\">related</span><span class=\"o\">.</span><span class=\"n\">Related</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.validation.related.validators.exactly_x": {"fullname": "fancy_signatures.validation.related.validators.exactly_x", "modulename": "fancy_signatures.validation.related.validators", "qualname": "exactly_x", "kind": "function", "doc": "<p>Validate exactly x of the parameters is provided.\n__EmptyArg__() is considered as not provided.</p>\n\n<p>Args:\n    allow_none (bool, optional): Whether to consider <code>None</code> as not provided. Defaults to True.</p>\n\n<p>Returns:\n    Related: Related object</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">allow_none</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">fancy_signatures</span><span class=\"o\">.</span><span class=\"n\">validation</span><span class=\"o\">.</span><span class=\"n\">related</span><span class=\"o\">.</span><span class=\"n\">related</span><span class=\"o\">.</span><span class=\"n\">Related</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.validation.related.validators.exactly_one": {"fullname": "fancy_signatures.validation.related.validators.exactly_one", "modulename": "fancy_signatures.validation.related.validators", "qualname": "exactly_one", "kind": "function", "doc": "<p>Validate exactly one of the parameters is provided.\n__EmptyArg__() is considered as not provided.</p>\n\n<p>Args:\n    allow_none (bool, optional): Whether to consider <code>None</code> as not provided. Defaults to True.</p>\n\n<p>Returns:\n    Related: Related object</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">allow_none</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">fancy_signatures</span><span class=\"o\">.</span><span class=\"n\">validation</span><span class=\"o\">.</span><span class=\"n\">related</span><span class=\"o\">.</span><span class=\"n\">related</span><span class=\"o\">.</span><span class=\"n\">Related</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.validation.related.validators.complementary_args": {"fullname": "fancy_signatures.validation.related.validators.complementary_args", "modulename": "fancy_signatures.validation.related.validators", "qualname": "complementary_args", "kind": "function", "doc": "<p>Validate all the arguments are given, or no of the arguments is given</p>\n\n<p>Args:\n    allow_none (bool, optional): Whether to consider <code>None</code> as not provided. Defaults to True.</p>\n\n<p>Returns:\n    Related: Related object which can be provided to @validate</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">allow_none</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">fancy_signatures</span><span class=\"o\">.</span><span class=\"n\">validation</span><span class=\"o\">.</span><span class=\"n\">related</span><span class=\"o\">.</span><span class=\"n\">related</span><span class=\"o\">.</span><span class=\"n\">Related</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.validation.related.validators.hierarchical_args": {"fullname": "fancy_signatures.validation.related.validators.hierarchical_args", "modulename": "fancy_signatures.validation.related.validators", "qualname": "hierarchical_args", "kind": "function", "doc": "<p>If the owner arg is provided all slave args should be provided as well</p>\n\n<p>Args:\n    owner (str): Name of the owner argument\n    slaves (list[str]): List of names of the slave arguments\n    allow_none (bool, optional): Whether to consider <code>None</code> as not provided. Defaults to True.</p>\n\n<p>Returns:\n    Related: Related object which can be provided to @validate</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">owner</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">slaves</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">allow_none</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"n\">fancy_signatures</span><span class=\"o\">.</span><span class=\"n\">validation</span><span class=\"o\">.</span><span class=\"n\">related</span><span class=\"o\">.</span><span class=\"n\">related</span><span class=\"o\">.</span><span class=\"n\">Related</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.validation.validators": {"fullname": "fancy_signatures.validation.validators", "modulename": "fancy_signatures.validation.validators", "kind": "module", "doc": "<p></p>\n"}, "fancy_signatures.validation.validators.HasLength": {"fullname": "fancy_signatures.validation.validators.HasLength", "modulename": "fancy_signatures.validation.validators", "qualname": "HasLength", "kind": "class", "doc": "<p>Base class for protocol classes.</p>\n\n<p>Protocol classes are defined as::</p>\n\n<pre><code>class Proto(Protocol):\n    def meth(self) -&gt; int:\n        ...\n</code></pre>\n\n<p>Such classes are primarily used with static type checkers that recognize\nstructural subtyping (static duck-typing).</p>\n\n<p>For example::</p>\n\n<pre><code>class C:\n    def meth(self) -&gt; int:\n        return 0\n\ndef func(x: Proto) -&gt; int:\n    return x.meth()\n\nfunc(C())  # Passes static type check\n</code></pre>\n\n<p>See PEP 544 for details. Protocol classes decorated with\n@typing.runtime_checkable act as simple-minded runtime protocols that check\nonly the presence of given attributes, ignoring their type signatures.\nProtocol classes can be generic, they are defined as::</p>\n\n<pre><code>class GenProto(Protocol[T]):\n    def meth(self) -&gt; T:\n        ...\n</code></pre>\n", "bases": "typing.Protocol"}, "fancy_signatures.validation.validators.HasLength.__init__": {"fullname": "fancy_signatures.validation.validators.HasLength.__init__", "modulename": "fancy_signatures.validation.validators", "qualname": "HasLength.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "fancy_signatures.validation.validators.HasLT": {"fullname": "fancy_signatures.validation.validators.HasLT", "modulename": "fancy_signatures.validation.validators", "qualname": "HasLT", "kind": "class", "doc": "<p>Base class for protocol classes.</p>\n\n<p>Protocol classes are defined as::</p>\n\n<pre><code>class Proto(Protocol):\n    def meth(self) -&gt; int:\n        ...\n</code></pre>\n\n<p>Such classes are primarily used with static type checkers that recognize\nstructural subtyping (static duck-typing).</p>\n\n<p>For example::</p>\n\n<pre><code>class C:\n    def meth(self) -&gt; int:\n        return 0\n\ndef func(x: Proto) -&gt; int:\n    return x.meth()\n\nfunc(C())  # Passes static type check\n</code></pre>\n\n<p>See PEP 544 for details. Protocol classes decorated with\n@typing.runtime_checkable act as simple-minded runtime protocols that check\nonly the presence of given attributes, ignoring their type signatures.\nProtocol classes can be generic, they are defined as::</p>\n\n<pre><code>class GenProto(Protocol[T]):\n    def meth(self) -&gt; T:\n        ...\n</code></pre>\n", "bases": "typing.Protocol"}, "fancy_signatures.validation.validators.HasLT.__init__": {"fullname": "fancy_signatures.validation.validators.HasLT.__init__", "modulename": "fancy_signatures.validation.validators", "qualname": "HasLT.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "fancy_signatures.validation.validators.HasEq": {"fullname": "fancy_signatures.validation.validators.HasEq", "modulename": "fancy_signatures.validation.validators", "qualname": "HasEq", "kind": "class", "doc": "<p>Base class for protocol classes.</p>\n\n<p>Protocol classes are defined as::</p>\n\n<pre><code>class Proto(Protocol):\n    def meth(self) -&gt; int:\n        ...\n</code></pre>\n\n<p>Such classes are primarily used with static type checkers that recognize\nstructural subtyping (static duck-typing).</p>\n\n<p>For example::</p>\n\n<pre><code>class C:\n    def meth(self) -&gt; int:\n        return 0\n\ndef func(x: Proto) -&gt; int:\n    return x.meth()\n\nfunc(C())  # Passes static type check\n</code></pre>\n\n<p>See PEP 544 for details. Protocol classes decorated with\n@typing.runtime_checkable act as simple-minded runtime protocols that check\nonly the presence of given attributes, ignoring their type signatures.\nProtocol classes can be generic, they are defined as::</p>\n\n<pre><code>class GenProto(Protocol[T]):\n    def meth(self) -&gt; T:\n        ...\n</code></pre>\n", "bases": "typing.Protocol"}, "fancy_signatures.validation.validators.HasEq.__init__": {"fullname": "fancy_signatures.validation.validators.HasEq.__init__", "modulename": "fancy_signatures.validation.validators", "qualname": "HasEq.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "fancy_signatures.validation.validators.HasGT": {"fullname": "fancy_signatures.validation.validators.HasGT", "modulename": "fancy_signatures.validation.validators", "qualname": "HasGT", "kind": "class", "doc": "<p>Base class for protocol classes.</p>\n\n<p>Protocol classes are defined as::</p>\n\n<pre><code>class Proto(Protocol):\n    def meth(self) -&gt; int:\n        ...\n</code></pre>\n\n<p>Such classes are primarily used with static type checkers that recognize\nstructural subtyping (static duck-typing).</p>\n\n<p>For example::</p>\n\n<pre><code>class C:\n    def meth(self) -&gt; int:\n        return 0\n\ndef func(x: Proto) -&gt; int:\n    return x.meth()\n\nfunc(C())  # Passes static type check\n</code></pre>\n\n<p>See PEP 544 for details. Protocol classes decorated with\n@typing.runtime_checkable act as simple-minded runtime protocols that check\nonly the presence of given attributes, ignoring their type signatures.\nProtocol classes can be generic, they are defined as::</p>\n\n<pre><code>class GenProto(Protocol[T]):\n    def meth(self) -&gt; T:\n        ...\n</code></pre>\n", "bases": "typing.Protocol"}, "fancy_signatures.validation.validators.HasGT.__init__": {"fullname": "fancy_signatures.validation.validators.HasGT.__init__", "modulename": "fancy_signatures.validation.validators", "qualname": "HasGT.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "fancy_signatures.validation.validators.IsIterable": {"fullname": "fancy_signatures.validation.validators.IsIterable", "modulename": "fancy_signatures.validation.validators", "qualname": "IsIterable", "kind": "class", "doc": "<p>Base class for protocol classes.</p>\n\n<p>Protocol classes are defined as::</p>\n\n<pre><code>class Proto(Protocol):\n    def meth(self) -&gt; int:\n        ...\n</code></pre>\n\n<p>Such classes are primarily used with static type checkers that recognize\nstructural subtyping (static duck-typing).</p>\n\n<p>For example::</p>\n\n<pre><code>class C:\n    def meth(self) -&gt; int:\n        return 0\n\ndef func(x: Proto) -&gt; int:\n    return x.meth()\n\nfunc(C())  # Passes static type check\n</code></pre>\n\n<p>See PEP 544 for details. Protocol classes decorated with\n@typing.runtime_checkable act as simple-minded runtime protocols that check\nonly the presence of given attributes, ignoring their type signatures.\nProtocol classes can be generic, they are defined as::</p>\n\n<pre><code>class GenProto(Protocol[T]):\n    def meth(self) -&gt; T:\n        ...\n</code></pre>\n", "bases": "typing.Protocol"}, "fancy_signatures.validation.validators.IsIterable.__init__": {"fullname": "fancy_signatures.validation.validators.IsIterable.__init__", "modulename": "fancy_signatures.validation.validators", "qualname": "IsIterable.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, "fancy_signatures.validation.validators.HasLe": {"fullname": "fancy_signatures.validation.validators.HasLe", "modulename": "fancy_signatures.validation.validators", "qualname": "HasLe", "kind": "class", "doc": "<p>Base class for protocol classes.</p>\n\n<p>Protocol classes are defined as::</p>\n\n<pre><code>class Proto(Protocol):\n    def meth(self) -&gt; int:\n        ...\n</code></pre>\n\n<p>Such classes are primarily used with static type checkers that recognize\nstructural subtyping (static duck-typing).</p>\n\n<p>For example::</p>\n\n<pre><code>class C:\n    def meth(self) -&gt; int:\n        return 0\n\ndef func(x: Proto) -&gt; int:\n    return x.meth()\n\nfunc(C())  # Passes static type check\n</code></pre>\n\n<p>See PEP 544 for details. Protocol classes decorated with\n@typing.runtime_checkable act as simple-minded runtime protocols that check\nonly the presence of given attributes, ignoring their type signatures.\nProtocol classes can be generic, they are defined as::</p>\n\n<pre><code>class GenProto(Protocol[T]):\n    def meth(self) -&gt; T:\n        ...\n</code></pre>\n", "bases": "HasLT, HasEq, typing.Protocol"}, "fancy_signatures.validation.validators.HasGe": {"fullname": "fancy_signatures.validation.validators.HasGe", "modulename": "fancy_signatures.validation.validators", "qualname": "HasGe", "kind": "class", "doc": "<p>Base class for protocol classes.</p>\n\n<p>Protocol classes are defined as::</p>\n\n<pre><code>class Proto(Protocol):\n    def meth(self) -&gt; int:\n        ...\n</code></pre>\n\n<p>Such classes are primarily used with static type checkers that recognize\nstructural subtyping (static duck-typing).</p>\n\n<p>For example::</p>\n\n<pre><code>class C:\n    def meth(self) -&gt; int:\n        return 0\n\ndef func(x: Proto) -&gt; int:\n    return x.meth()\n\nfunc(C())  # Passes static type check\n</code></pre>\n\n<p>See PEP 544 for details. Protocol classes decorated with\n@typing.runtime_checkable act as simple-minded runtime protocols that check\nonly the presence of given attributes, ignoring their type signatures.\nProtocol classes can be generic, they are defined as::</p>\n\n<pre><code>class GenProto(Protocol[T]):\n    def meth(self) -&gt; T:\n        ...\n</code></pre>\n", "bases": "HasGT, HasEq, typing.Protocol"}, "fancy_signatures.validation.validators.HasMinMax": {"fullname": "fancy_signatures.validation.validators.HasMinMax", "modulename": "fancy_signatures.validation.validators", "qualname": "HasMinMax", "kind": "class", "doc": "<p>Base class for protocol classes.</p>\n\n<p>Protocol classes are defined as::</p>\n\n<pre><code>class Proto(Protocol):\n    def meth(self) -&gt; int:\n        ...\n</code></pre>\n\n<p>Such classes are primarily used with static type checkers that recognize\nstructural subtyping (static duck-typing).</p>\n\n<p>For example::</p>\n\n<pre><code>class C:\n    def meth(self) -&gt; int:\n        return 0\n\ndef func(x: Proto) -&gt; int:\n    return x.meth()\n\nfunc(C())  # Passes static type check\n</code></pre>\n\n<p>See PEP 544 for details. Protocol classes decorated with\n@typing.runtime_checkable act as simple-minded runtime protocols that check\nonly the presence of given attributes, ignoring their type signatures.\nProtocol classes can be generic, they are defined as::</p>\n\n<pre><code>class GenProto(Protocol[T]):\n    def meth(self) -&gt; T:\n        ...\n</code></pre>\n", "bases": "HasLT, HasGT, HasEq, typing.Protocol"}, "fancy_signatures.validation.validators.GE": {"fullname": "fancy_signatures.validation.validators.GE", "modulename": "fancy_signatures.validation.validators", "qualname": "GE", "kind": "class", "doc": "<p>Validator for an argument passed to a function or method</p>\n", "bases": "fancy_signatures.core.interface.Validator[~LtT]"}, "fancy_signatures.validation.validators.GE.__init__": {"fullname": "fancy_signatures.validation.validators.GE.__init__", "modulename": "fancy_signatures.validation.validators", "qualname": "GE.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span>)</span>"}, "fancy_signatures.validation.validators.GE.validate": {"fullname": "fancy_signatures.validation.validators.GE.validate", "modulename": "fancy_signatures.validation.validators", "qualname": "GE.validate", "kind": "function", "doc": "<p>Validate an argument</p>\n\n<p>If the validation fails <code>fancy_signatures.exceptions.ValidatorFailed</code> shoud be raised.\nIn case of no errors, the input value should be returned</p>\n\n<p>Args:\n    obj (T): The input value</p>\n\n<p>Returns:\n    T: The validated argument itself</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">LtT</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">LtT</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.validation.validators.GT": {"fullname": "fancy_signatures.validation.validators.GT", "modulename": "fancy_signatures.validation.validators", "qualname": "GT", "kind": "class", "doc": "<p>Validator for an argument passed to a function or method</p>\n", "bases": "fancy_signatures.core.interface.Validator[~LeT]"}, "fancy_signatures.validation.validators.GT.__init__": {"fullname": "fancy_signatures.validation.validators.GT.__init__", "modulename": "fancy_signatures.validation.validators", "qualname": "GT.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span>)</span>"}, "fancy_signatures.validation.validators.GT.validate": {"fullname": "fancy_signatures.validation.validators.GT.validate", "modulename": "fancy_signatures.validation.validators", "qualname": "GT.validate", "kind": "function", "doc": "<p>Validate an argument</p>\n\n<p>If the validation fails <code>fancy_signatures.exceptions.ValidatorFailed</code> shoud be raised.\nIn case of no errors, the input value should be returned</p>\n\n<p>Args:\n    obj (T): The input value</p>\n\n<p>Returns:\n    T: The validated argument itself</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">LeT</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">LeT</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.validation.validators.LE": {"fullname": "fancy_signatures.validation.validators.LE", "modulename": "fancy_signatures.validation.validators", "qualname": "LE", "kind": "class", "doc": "<p>Validator for an argument passed to a function or method</p>\n", "bases": "fancy_signatures.core.interface.Validator[~GtT]"}, "fancy_signatures.validation.validators.LE.__init__": {"fullname": "fancy_signatures.validation.validators.LE.__init__", "modulename": "fancy_signatures.validation.validators", "qualname": "LE.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span>)</span>"}, "fancy_signatures.validation.validators.LE.validate": {"fullname": "fancy_signatures.validation.validators.LE.validate", "modulename": "fancy_signatures.validation.validators", "qualname": "LE.validate", "kind": "function", "doc": "<p>Validate an argument</p>\n\n<p>If the validation fails <code>fancy_signatures.exceptions.ValidatorFailed</code> shoud be raised.\nIn case of no errors, the input value should be returned</p>\n\n<p>Args:\n    obj (T): The input value</p>\n\n<p>Returns:\n    T: The validated argument itself</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">GtT</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">GtT</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.validation.validators.LT": {"fullname": "fancy_signatures.validation.validators.LT", "modulename": "fancy_signatures.validation.validators", "qualname": "LT", "kind": "class", "doc": "<p>Validator for an argument passed to a function or method</p>\n", "bases": "fancy_signatures.core.interface.Validator[~GeT]"}, "fancy_signatures.validation.validators.LT.__init__": {"fullname": "fancy_signatures.validation.validators.LT.__init__", "modulename": "fancy_signatures.validation.validators", "qualname": "LT.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">Any</span></span>)</span>"}, "fancy_signatures.validation.validators.LT.validate": {"fullname": "fancy_signatures.validation.validators.LT.validate", "modulename": "fancy_signatures.validation.validators", "qualname": "LT.validate", "kind": "function", "doc": "<p>Validate an argument</p>\n\n<p>If the validation fails <code>fancy_signatures.exceptions.ValidatorFailed</code> shoud be raised.\nIn case of no errors, the input value should be returned</p>\n\n<p>Args:\n    obj (T): The input value</p>\n\n<p>Returns:\n    T: The validated argument itself</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">GeT</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">GeT</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.validation.validators.MaxLength": {"fullname": "fancy_signatures.validation.validators.MaxLength", "modulename": "fancy_signatures.validation.validators", "qualname": "MaxLength", "kind": "class", "doc": "<p>Validator for an argument passed to a function or method</p>\n", "bases": "fancy_signatures.core.interface.Validator[~LengthT]"}, "fancy_signatures.validation.validators.MaxLength.__init__": {"fullname": "fancy_signatures.validation.validators.MaxLength.__init__", "modulename": "fancy_signatures.validation.validators", "qualname": "MaxLength.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">max</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span>)</span>"}, "fancy_signatures.validation.validators.MaxLength.validate": {"fullname": "fancy_signatures.validation.validators.MaxLength.validate", "modulename": "fancy_signatures.validation.validators", "qualname": "MaxLength.validate", "kind": "function", "doc": "<p>Validate an argument</p>\n\n<p>If the validation fails <code>fancy_signatures.exceptions.ValidatorFailed</code> shoud be raised.\nIn case of no errors, the input value should be returned</p>\n\n<p>Args:\n    obj (T): The input value</p>\n\n<p>Returns:\n    T: The validated argument itself</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">LengthT</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">LengthT</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.validation.validators.MinLength": {"fullname": "fancy_signatures.validation.validators.MinLength", "modulename": "fancy_signatures.validation.validators", "qualname": "MinLength", "kind": "class", "doc": "<p>Validator for an argument passed to a function or method</p>\n", "bases": "fancy_signatures.core.interface.Validator[~LengthT]"}, "fancy_signatures.validation.validators.MinLength.__init__": {"fullname": "fancy_signatures.validation.validators.MinLength.__init__", "modulename": "fancy_signatures.validation.validators", "qualname": "MinLength.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"nb\">min</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span>)</span>"}, "fancy_signatures.validation.validators.MinLength.validate": {"fullname": "fancy_signatures.validation.validators.MinLength.validate", "modulename": "fancy_signatures.validation.validators", "qualname": "MinLength.validate", "kind": "function", "doc": "<p>Validate an argument</p>\n\n<p>If the validation fails <code>fancy_signatures.exceptions.ValidatorFailed</code> shoud be raised.\nIn case of no errors, the input value should be returned</p>\n\n<p>Args:\n    obj (T): The input value</p>\n\n<p>Returns:\n    T: The validated argument itself</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">LengthT</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">LengthT</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.validation.validators.BlackListedValues": {"fullname": "fancy_signatures.validation.validators.BlackListedValues", "modulename": "fancy_signatures.validation.validators", "qualname": "BlackListedValues", "kind": "class", "doc": "<p>Validator for an argument passed to a function or method</p>\n", "bases": "fancy_signatures.core.interface.Validator[~T]"}, "fancy_signatures.validation.validators.BlackListedValues.__init__": {"fullname": "fancy_signatures.validation.validators.BlackListedValues.__init__", "modulename": "fancy_signatures.validation.validators", "qualname": "BlackListedValues.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">values</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">T</span></span>)</span>"}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"fullname": "fancy_signatures.validation.validators.BlackListedValues.validate", "modulename": "fancy_signatures.validation.validators", "qualname": "BlackListedValues.validate", "kind": "function", "doc": "<p>Validate an argument</p>\n\n<p>If the validation fails <code>fancy_signatures.exceptions.ValidatorFailed</code> shoud be raised.\nIn case of no errors, the input value should be returned</p>\n\n<p>Args:\n    obj (T): The input value</p>\n\n<p>Returns:\n    T: The validated argument itself</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">T</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">T</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.validation.validators.IsInValidator": {"fullname": "fancy_signatures.validation.validators.IsInValidator", "modulename": "fancy_signatures.validation.validators", "qualname": "IsInValidator", "kind": "class", "doc": "<p>Validator for an argument passed to a function or method</p>\n", "bases": "fancy_signatures.core.interface.Validator[~T]"}, "fancy_signatures.validation.validators.IsInValidator.__init__": {"fullname": "fancy_signatures.validation.validators.IsInValidator.__init__", "modulename": "fancy_signatures.validation.validators", "qualname": "IsInValidator.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">values</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">T</span></span>)</span>"}, "fancy_signatures.validation.validators.IsInValidator.validate": {"fullname": "fancy_signatures.validation.validators.IsInValidator.validate", "modulename": "fancy_signatures.validation.validators", "qualname": "IsInValidator.validate", "kind": "function", "doc": "<p>Validate an argument</p>\n\n<p>If the validation fails <code>fancy_signatures.exceptions.ValidatorFailed</code> shoud be raised.\nIn case of no errors, the input value should be returned</p>\n\n<p>Args:\n    obj (T): The input value</p>\n\n<p>Returns:\n    T: The validated argument itself</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"o\">~</span><span class=\"n\">T</span></span><span class=\"return-annotation\">) -> <span class=\"o\">~</span><span class=\"n\">T</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.validation.validators.RegexValidator": {"fullname": "fancy_signatures.validation.validators.RegexValidator", "modulename": "fancy_signatures.validation.validators", "qualname": "RegexValidator", "kind": "class", "doc": "<p>Validator for an argument passed to a function or method</p>\n", "bases": "fancy_signatures.core.interface.Validator[str]"}, "fancy_signatures.validation.validators.RegexValidator.__init__": {"fullname": "fancy_signatures.validation.validators.RegexValidator.__init__", "modulename": "fancy_signatures.validation.validators", "qualname": "RegexValidator.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pattern</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, "fancy_signatures.validation.validators.RegexValidator.validate": {"fullname": "fancy_signatures.validation.validators.RegexValidator.validate", "modulename": "fancy_signatures.validation.validators", "qualname": "RegexValidator.validate", "kind": "function", "doc": "<p>Validate an argument</p>\n\n<p>If the validation fails <code>fancy_signatures.exceptions.ValidatorFailed</code> shoud be raised.\nIn case of no errors, the input value should be returned</p>\n\n<p>Args:\n    obj (T): The input value</p>\n\n<p>Returns:\n    T: The validated argument itself</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.validation.validators.MultipleOfValidator": {"fullname": "fancy_signatures.validation.validators.MultipleOfValidator", "modulename": "fancy_signatures.validation.validators", "qualname": "MultipleOfValidator", "kind": "class", "doc": "<p>Validator for an argument passed to a function or method</p>\n", "bases": "fancy_signatures.core.interface.Validator[int | float]"}, "fancy_signatures.validation.validators.MultipleOfValidator.__init__": {"fullname": "fancy_signatures.validation.validators.MultipleOfValidator.__init__", "modulename": "fancy_signatures.validation.validators", "qualname": "MultipleOfValidator.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">base</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span></span>)</span>"}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"fullname": "fancy_signatures.validation.validators.MultipleOfValidator.validate", "modulename": "fancy_signatures.validation.validators", "qualname": "MultipleOfValidator.validate", "kind": "function", "doc": "<p>Validate an argument</p>\n\n<p>If the validation fails <code>fancy_signatures.exceptions.ValidatorFailed</code> shoud be raised.\nIn case of no errors, the input value should be returned</p>\n\n<p>Args:\n    obj (T): The input value</p>\n\n<p>Returns:\n    T: The validated argument itself</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span> <span class=\"o\">|</span> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.validation.validators.DecimalPlacesValidator": {"fullname": "fancy_signatures.validation.validators.DecimalPlacesValidator", "modulename": "fancy_signatures.validation.validators", "qualname": "DecimalPlacesValidator", "kind": "class", "doc": "<p>Validator for an argument passed to a function or method</p>\n", "bases": "fancy_signatures.core.interface.Validator[float]"}, "fancy_signatures.validation.validators.DecimalPlacesValidator.__init__": {"fullname": "fancy_signatures.validation.validators.DecimalPlacesValidator.__init__", "modulename": "fancy_signatures.validation.validators", "qualname": "DecimalPlacesValidator.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">places</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span>)</span>"}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"fullname": "fancy_signatures.validation.validators.DecimalPlacesValidator.validate", "modulename": "fancy_signatures.validation.validators", "qualname": "DecimalPlacesValidator.validate", "kind": "function", "doc": "<p>Validate an argument</p>\n\n<p>If the validation fails <code>fancy_signatures.exceptions.ValidatorFailed</code> shoud be raised.\nIn case of no errors, the input value should be returned</p>\n\n<p>Args:\n    obj (T): The input value</p>\n\n<p>Returns:\n    T: The validated argument itself</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"nb\">float</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">float</span>:</span></span>", "funcdef": "def"}, "fancy_signatures.validation.validators.OptionalGE": {"fullname": "fancy_signatures.validation.validators.OptionalGE", "modulename": "fancy_signatures.validation.validators", "qualname": "OptionalGE", "kind": "class", "doc": "<p>MixIn to make a validator allow 'None'.</p>\n", "bases": "fancy_signatures.validation.mixins.AllowOptionalMixin, fancy_signatures.validation.validators.GE[~LtT]"}, "fancy_signatures.validation.validators.OptionalGT": {"fullname": "fancy_signatures.validation.validators.OptionalGT", "modulename": "fancy_signatures.validation.validators", "qualname": "OptionalGT", "kind": "class", "doc": "<p>MixIn to make a validator allow 'None'.</p>\n", "bases": "fancy_signatures.validation.mixins.AllowOptionalMixin, fancy_signatures.validation.validators.GT[~LeT]"}, "fancy_signatures.validation.validators.OptionalLE": {"fullname": "fancy_signatures.validation.validators.OptionalLE", "modulename": "fancy_signatures.validation.validators", "qualname": "OptionalLE", "kind": "class", "doc": "<p>MixIn to make a validator allow 'None'.</p>\n", "bases": "fancy_signatures.validation.mixins.AllowOptionalMixin, fancy_signatures.validation.validators.LE[~GtT]"}, "fancy_signatures.validation.validators.OptionalLT": {"fullname": "fancy_signatures.validation.validators.OptionalLT", "modulename": "fancy_signatures.validation.validators", "qualname": "OptionalLT", "kind": "class", "doc": "<p>MixIn to make a validator allow 'None'.</p>\n", "bases": "fancy_signatures.validation.mixins.AllowOptionalMixin, fancy_signatures.validation.validators.LT[~GeT]"}, "fancy_signatures.validation.validators.OptionalRegexValidator": {"fullname": "fancy_signatures.validation.validators.OptionalRegexValidator", "modulename": "fancy_signatures.validation.validators", "qualname": "OptionalRegexValidator", "kind": "class", "doc": "<p>MixIn to make a validator allow 'None'.</p>\n", "bases": "fancy_signatures.core.interface.Validator[typing.Optional[~T]]"}, "fancy_signatures.validation.validators.OptionalMultipleOfValidator": {"fullname": "fancy_signatures.validation.validators.OptionalMultipleOfValidator", "modulename": "fancy_signatures.validation.validators", "qualname": "OptionalMultipleOfValidator", "kind": "class", "doc": "<p>MixIn to make a validator allow 'None'.</p>\n", "bases": "fancy_signatures.core.interface.Validator[typing.Optional[~T]]"}, "fancy_signatures.validation.validators.OptionalDecimalPlacesValidator": {"fullname": "fancy_signatures.validation.validators.OptionalDecimalPlacesValidator", "modulename": "fancy_signatures.validation.validators", "qualname": "OptionalDecimalPlacesValidator", "kind": "class", "doc": "<p>MixIn to make a validator allow 'None'.</p>\n", "bases": "fancy_signatures.core.interface.Validator[typing.Optional[~T]]"}}, "docInfo": {"fancy_signatures": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3500}, "fancy_signatures.api": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.api.arg": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 119, "bases": 0, "doc": 102}, "fancy_signatures.api.validate": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 146, "bases": 0, "doc": 125}, "fancy_signatures.core": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.core.empty": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.core.empty.is_empty": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 19, "bases": 0, "doc": 48}, "fancy_signatures.core.field": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.core.field.UnTypedArgField": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.core.field.UnTypedArgField.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 75, "bases": 0, "doc": 3}, "fancy_signatures.core.field.UnTypedArgField.set_type": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 58, "bases": 0, "doc": 3}, "fancy_signatures.core.field.TypedArgField": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 3}, "fancy_signatures.core.field.TypedArgField.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 102, "bases": 0, "doc": 3}, "fancy_signatures.core.field.TypedArgField.execute": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 3}, "fancy_signatures.core.interface": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.core.interface.Validator": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 12}, "fancy_signatures.core.interface.Validator.validate": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 48}, "fancy_signatures.core.interface.Default": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 23}, "fancy_signatures.core.interface.Default.get": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 30}, "fancy_signatures.core.interface.TypeCaster": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 15}, "fancy_signatures.core.interface.TypeCaster.validate": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 46}, "fancy_signatures.core.interface.TypeCaster.cast": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 27, "bases": 0, "doc": 41}, "fancy_signatures.default": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.default.defaults": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.default.defaults.FactoryFunc": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 4, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.default.defaults.DefaultValue": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 23}, "fancy_signatures.default.defaults.DefaultValue.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 50, "bases": 0, "doc": 3}, "fancy_signatures.default.defaults.DefaultValue.get": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 30}, "fancy_signatures.default.defaults.DefaultFactory": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 23}, "fancy_signatures.default.defaults.DefaultFactory.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 3}, "fancy_signatures.default.defaults.DefaultFactory.get": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 30}, "fancy_signatures.default.defaults.EmptyList": {"qualname": 1, "fullname": 5, "annotation": 6, "default_value": 10, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.default.defaults.EmptyDict": {"qualname": 1, "fullname": 5, "annotation": 6, "default_value": 10, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.default.defaults.EmptyTuple": {"qualname": 1, "fullname": 5, "annotation": 6, "default_value": 10, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.default.defaults.EmptySet": {"qualname": 1, "fullname": 5, "annotation": 6, "default_value": 10, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.exceptions": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.exceptions.ValidationError": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 11}, "fancy_signatures.exceptions.ValidationError.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 3}, "fancy_signatures.settings": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.settings.reset": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 10, "bases": 0, "doc": 9}, "fancy_signatures.settings.set": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 37}, "fancy_signatures.settings.get_typecast_handlers": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 57, "bases": 0, "doc": 25}, "fancy_signatures.settings.ProtocolHandlingLevel": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 338}, "fancy_signatures.settings.ProtocolHandlingLevel.ALLOW": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.settings.ProtocolHandlingLevel.WARN": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.settings.ProtocolHandlingLevel.DISALLOW": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 9, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.typecasting": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.typecasting.default": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 45}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 46}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 41}, "fancy_signatures.typecasting.factory": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.typecasting.factory.typecaster_factory": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 83}, "fancy_signatures.typecasting.generic_alias": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 9, "doc": 15}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 3}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 46}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 37, "bases": 0, "doc": 41}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 15}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 3}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 46}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 41}, "fancy_signatures.typecasting.handlers": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.typecasting.handlers.register_handler": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 64}, "fancy_signatures.typecasting.handlers.unregister_handler": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 3}, "fancy_signatures.typecasting.handlers.unregister_strict_handler": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 3}, "fancy_signatures.typecasting.special_origins": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.typecasting.special_origins.StringTypeCaster": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 15}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 46}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 41}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 15}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 46}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 41}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 15}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 3}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 46}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 41}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 15}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 46}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 41}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 15}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 46}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 41}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 15}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 3}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 46}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 29, "bases": 0, "doc": 41}, "fancy_signatures.typecasting.union": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.typecasting.union.UnionTypeCaster": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 15}, "fancy_signatures.typecasting.union.UnionTypeCaster.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 15, "bases": 0, "doc": 3}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 46}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 30, "bases": 0, "doc": 41}, "fancy_signatures.validation": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.validation.mixins": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.validation.mixins.AllowOptionalMixin": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 10}, "fancy_signatures.validation.related": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.validation.related.related": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.validation.related.related.Related": {"qualname": 1, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.validation.related.related.Related.__init__": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 3}, "fancy_signatures.validation.related.validators": {"qualname": 0, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"qualname": 3, "fullname": 8, "annotation": 0, "default_value": 0, "signature": 62, "bases": 0, "doc": 52}, "fancy_signatures.validation.related.validators.exactly_x": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 73, "bases": 0, "doc": 44}, "fancy_signatures.validation.related.validators.exactly_one": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 62, "bases": 0, "doc": 44}, "fancy_signatures.validation.related.validators.complementary_args": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 62, "bases": 0, "doc": 48}, "fancy_signatures.validation.related.validators.hierarchical_args": {"qualname": 2, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 77, "bases": 0, "doc": 67}, "fancy_signatures.validation.validators": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "fancy_signatures.validation.validators.HasLength": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 137}, "fancy_signatures.validation.validators.HasLength.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "fancy_signatures.validation.validators.HasLT": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 137}, "fancy_signatures.validation.validators.HasLT.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "fancy_signatures.validation.validators.HasEq": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 137}, "fancy_signatures.validation.validators.HasEq.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "fancy_signatures.validation.validators.HasGT": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 137}, "fancy_signatures.validation.validators.HasGT.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "fancy_signatures.validation.validators.IsIterable": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 137}, "fancy_signatures.validation.validators.IsIterable.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "fancy_signatures.validation.validators.HasLe": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 137}, "fancy_signatures.validation.validators.HasGe": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 137}, "fancy_signatures.validation.validators.HasMinMax": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 137}, "fancy_signatures.validation.validators.GE": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 12}, "fancy_signatures.validation.validators.GE.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "fancy_signatures.validation.validators.GE.validate": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 48}, "fancy_signatures.validation.validators.GT": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 12}, "fancy_signatures.validation.validators.GT.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "fancy_signatures.validation.validators.GT.validate": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 48}, "fancy_signatures.validation.validators.LE": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 12}, "fancy_signatures.validation.validators.LE.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "fancy_signatures.validation.validators.LE.validate": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 48}, "fancy_signatures.validation.validators.LT": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 12}, "fancy_signatures.validation.validators.LT.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "fancy_signatures.validation.validators.LT.validate": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 48}, "fancy_signatures.validation.validators.MaxLength": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 12}, "fancy_signatures.validation.validators.MaxLength.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "fancy_signatures.validation.validators.MaxLength.validate": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 48}, "fancy_signatures.validation.validators.MinLength": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 12}, "fancy_signatures.validation.validators.MinLength.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "fancy_signatures.validation.validators.MinLength.validate": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 48}, "fancy_signatures.validation.validators.BlackListedValues": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 12}, "fancy_signatures.validation.validators.BlackListedValues.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 48}, "fancy_signatures.validation.validators.IsInValidator": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 12}, "fancy_signatures.validation.validators.IsInValidator.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 18, "bases": 0, "doc": 3}, "fancy_signatures.validation.validators.IsInValidator.validate": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 28, "bases": 0, "doc": 48}, "fancy_signatures.validation.validators.RegexValidator": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 12}, "fancy_signatures.validation.validators.RegexValidator.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "fancy_signatures.validation.validators.RegexValidator.validate": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 48}, "fancy_signatures.validation.validators.MultipleOfValidator": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 7, "doc": 12}, "fancy_signatures.validation.validators.MultipleOfValidator.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 20, "bases": 0, "doc": 3}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 36, "bases": 0, "doc": 48}, "fancy_signatures.validation.validators.DecimalPlacesValidator": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 5, "doc": 12}, "fancy_signatures.validation.validators.DecimalPlacesValidator.__init__": {"qualname": 3, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 48}, "fancy_signatures.validation.validators.OptionalGE": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 10, "doc": 10}, "fancy_signatures.validation.validators.OptionalGT": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 10, "doc": 10}, "fancy_signatures.validation.validators.OptionalLE": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 10, "doc": 10}, "fancy_signatures.validation.validators.OptionalLT": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 10, "doc": 10}, "fancy_signatures.validation.validators.OptionalRegexValidator": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 10}, "fancy_signatures.validation.validators.OptionalMultipleOfValidator": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 10}, "fancy_signatures.validation.validators.OptionalDecimalPlacesValidator": {"qualname": 1, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 6, "doc": 10}}, "length": 159, "save": true}, "index": {"qualname": {"root": {"docs": {"fancy_signatures.core.field.UnTypedArgField.__init__": {"tf": 1}, "fancy_signatures.core.field.TypedArgField.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.__init__": {"tf": 1}, "fancy_signatures.exceptions.ValidationError.__init__": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.__init__": {"tf": 1}, "fancy_signatures.validation.related.related.Related.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasLT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasEq.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasGT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable.__init__": {"tf": 1}, "fancy_signatures.validation.validators.GE.__init__": {"tf": 1}, "fancy_signatures.validation.validators.GT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.LE.__init__": {"tf": 1}, "fancy_signatures.validation.validators.LT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.__init__": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.__init__": {"tf": 1}}, "df": 27, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"fancy_signatures.api.arg": {"tf": 1}}, "df": 1, "s": {"docs": {"fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel.ALLOW": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures.validation.mixins.AllowOptionalMixin": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.typecasting.special_origins.AnyTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}}, "df": 3}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 24}, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.core.interface.Validator": {"tf": 1}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.exceptions.ValidationError": {"tf": 1}, "fancy_signatures.exceptions.ValidationError.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.core.empty.is_empty": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable.__init__": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.validation.validators.IsInValidator": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.core.field.UnTypedArgField.__init__": {"tf": 1}, "fancy_signatures.core.field.TypedArgField.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.__init__": {"tf": 1}, "fancy_signatures.exceptions.ValidationError.__init__": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.__init__": {"tf": 1}, "fancy_signatures.validation.related.related.Related.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasLT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasEq.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasGT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable.__init__": {"tf": 1}, "fancy_signatures.validation.validators.GE.__init__": {"tf": 1}, "fancy_signatures.validation.validators.GT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.LE.__init__": {"tf": 1}, "fancy_signatures.validation.validators.LT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.__init__": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.__init__": {"tf": 1}}, "df": 27}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.core.empty.is_empty": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.default.defaults.EmptyList": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.default.defaults.EmptyDict": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.default.defaults.EmptyTuple": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.default.defaults.EmptySet": {"tf": 1}}, "df": 1}}}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.core.field.TypedArgField.execute": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.core.field.UnTypedArgField": {"tf": 1}, "fancy_signatures.core.field.UnTypedArgField.__init__": {"tf": 1}, "fancy_signatures.core.field.UnTypedArgField.set_type": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.typecasting.handlers.unregister_handler": {"tf": 1}, "fancy_signatures.typecasting.handlers.unregister_strict_handler": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.typecasting.union.UnionTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.core.field.UnTypedArgField.set_type": {"tf": 1}, "fancy_signatures.settings.set": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.typecasting.handlers.unregister_strict_handler": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.typecasting.special_origins.StringTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.core.field.UnTypedArgField.set_type": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.core.field.TypedArgField": {"tf": 1}, "fancy_signatures.core.field.TypedArgField.__init__": {"tf": 1}, "fancy_signatures.core.field.TypedArgField.execute": {"tf": 1}}, "df": 3}}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.settings.get_typecast_handlers": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.core.interface.TypeCaster": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}}, "df": 4}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.core.interface.Default": {"tf": 1}, "fancy_signatures.core.interface.Default.get": {"tf": 1}}, "df": 2, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.default.defaults.DefaultValue": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.get": {"tf": 1}}, "df": 3}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.default.defaults.DefaultFactory": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.get": {"tf": 1}}, "df": 3}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.validation.validators.DecimalPlacesValidator": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel.DISALLOW": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.typecasting.generic_alias.DictTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.validation.validators.GE": {"tf": 1}, "fancy_signatures.validation.validators.GE.__init__": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}}, "df": 3, "t": {"docs": {"fancy_signatures.core.interface.Default.get": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.get": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.get": {"tf": 1}, "fancy_signatures.settings.get_typecast_handlers": {"tf": 1}}, "df": 4}}, "t": {"docs": {"fancy_signatures.validation.validators.GT": {"tf": 1}, "fancy_signatures.validation.validators.GT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}}, "df": 3}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}}, "df": 11}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"fancy_signatures.default.defaults.FactoryFunc": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.settings.reset": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.validation.validators.RegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.validation.related.related.Related": {"tf": 1}, "fancy_signatures.validation.related.related.Related.__init__": {"tf": 1}}, "df": 2}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}, "fancy_signatures.typecasting.handlers.unregister_handler": {"tf": 1}, "fancy_signatures.typecasting.handlers.unregister_strict_handler": {"tf": 1}}, "df": 3, "s": {"docs": {"fancy_signatures.settings.get_typecast_handlers": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.validation.validators.HasLe": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLength.__init__": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {"fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasLT.__init__": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "q": {"docs": {"fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasEq.__init__": {"tf": 1}}, "df": 2}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.HasGT.__init__": {"tf": 1}}, "df": 2}, "e": {"docs": {"fancy_signatures.validation.validators.HasGe": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel.ALLOW": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel.WARN": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel.DISALLOW": {"tf": 1}}, "df": 4}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.typecasting.special_origins.ProtocolTypecaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel.WARN": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {"fancy_signatures.validation.validators.LE": {"tf": 1}, "fancy_signatures.validation.validators.LE.__init__": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}}, "df": 3}, "t": {"docs": {"fancy_signatures.validation.validators.LT": {"tf": 1}, "fancy_signatures.validation.validators.LT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}}, "df": 3}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.typecasting.special_origins.BooleanTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.validation.validators.BlackListedValues": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.__init__": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.typecasting.special_origins.NoneTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.validation.validators.MultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"fancy_signatures.validation.validators.MaxLength": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}}, "df": 3}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"fancy_signatures.validation.validators.MinLength": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}}, "df": 3}}}}}}}}}, "x": {"docs": {"fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.validation.validators.OptionalGE": {"tf": 1}}, "df": 1}, "t": {"docs": {"fancy_signatures.validation.validators.OptionalGT": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.validation.validators.OptionalLE": {"tf": 1}}, "df": 1}, "t": {"docs": {"fancy_signatures.validation.validators.OptionalLT": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.validation.validators.OptionalRegexValidator": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.validation.validators.OptionalMultipleOfValidator": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.validation.validators.OptionalDecimalPlacesValidator": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "fullname": {"root": {"docs": {"fancy_signatures.core.field.UnTypedArgField.__init__": {"tf": 1}, "fancy_signatures.core.field.TypedArgField.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.__init__": {"tf": 1}, "fancy_signatures.exceptions.ValidationError.__init__": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.__init__": {"tf": 1}, "fancy_signatures.validation.related.related.Related.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasLT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasEq.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasGT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable.__init__": {"tf": 1}, "fancy_signatures.validation.validators.GE.__init__": {"tf": 1}, "fancy_signatures.validation.validators.GT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.LE.__init__": {"tf": 1}, "fancy_signatures.validation.validators.LT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.__init__": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.__init__": {"tf": 1}}, "df": 27, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.api": {"tf": 1}, "fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.core": {"tf": 1}, "fancy_signatures.core.empty": {"tf": 1}, "fancy_signatures.core.empty.is_empty": {"tf": 1}, "fancy_signatures.core.field": {"tf": 1}, "fancy_signatures.core.field.UnTypedArgField": {"tf": 1}, "fancy_signatures.core.field.UnTypedArgField.__init__": {"tf": 1}, "fancy_signatures.core.field.UnTypedArgField.set_type": {"tf": 1}, "fancy_signatures.core.field.TypedArgField": {"tf": 1}, "fancy_signatures.core.field.TypedArgField.__init__": {"tf": 1}, "fancy_signatures.core.field.TypedArgField.execute": {"tf": 1}, "fancy_signatures.core.interface": {"tf": 1}, "fancy_signatures.core.interface.Validator": {"tf": 1}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.core.interface.Default": {"tf": 1}, "fancy_signatures.core.interface.Default.get": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.default": {"tf": 1}, "fancy_signatures.default.defaults": {"tf": 1}, "fancy_signatures.default.defaults.FactoryFunc": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.get": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.get": {"tf": 1}, "fancy_signatures.default.defaults.EmptyList": {"tf": 1}, "fancy_signatures.default.defaults.EmptyDict": {"tf": 1}, "fancy_signatures.default.defaults.EmptyTuple": {"tf": 1}, "fancy_signatures.default.defaults.EmptySet": {"tf": 1}, "fancy_signatures.exceptions": {"tf": 1}, "fancy_signatures.exceptions.ValidationError": {"tf": 1}, "fancy_signatures.exceptions.ValidationError.__init__": {"tf": 1}, "fancy_signatures.settings": {"tf": 1}, "fancy_signatures.settings.reset": {"tf": 1}, "fancy_signatures.settings.set": {"tf": 1}, "fancy_signatures.settings.get_typecast_handlers": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel.ALLOW": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel.WARN": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel.DISALLOW": {"tf": 1}, "fancy_signatures.typecasting": {"tf": 1}, "fancy_signatures.typecasting.default": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.factory": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}, "fancy_signatures.typecasting.generic_alias": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.handlers": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}, "fancy_signatures.typecasting.handlers.unregister_handler": {"tf": 1}, "fancy_signatures.typecasting.handlers.unregister_strict_handler": {"tf": 1}, "fancy_signatures.typecasting.special_origins": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}, "fancy_signatures.typecasting.union": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}, "fancy_signatures.validation": {"tf": 1}, "fancy_signatures.validation.mixins": {"tf": 1}, "fancy_signatures.validation.mixins.AllowOptionalMixin": {"tf": 1}, "fancy_signatures.validation.related": {"tf": 1}, "fancy_signatures.validation.related.related": {"tf": 1}, "fancy_signatures.validation.related.related.Related": {"tf": 1}, "fancy_signatures.validation.related.related.Related.__init__": {"tf": 1}, "fancy_signatures.validation.related.validators": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}, "fancy_signatures.validation.validators": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasLT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasEq.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.HasGT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}, "fancy_signatures.validation.validators.GE": {"tf": 1}, "fancy_signatures.validation.validators.GE.__init__": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT": {"tf": 1}, "fancy_signatures.validation.validators.GT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE": {"tf": 1}, "fancy_signatures.validation.validators.LE.__init__": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT": {"tf": 1}, "fancy_signatures.validation.validators.LT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.__init__": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.OptionalGE": {"tf": 1}, "fancy_signatures.validation.validators.OptionalGT": {"tf": 1}, "fancy_signatures.validation.validators.OptionalLE": {"tf": 1}, "fancy_signatures.validation.validators.OptionalLT": {"tf": 1}, "fancy_signatures.validation.validators.OptionalRegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalMultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalDecimalPlacesValidator": {"tf": 1}}, "df": 159}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.typecasting.factory": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1.4142135623730951}}, "df": 2, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"fancy_signatures.default.defaults.FactoryFunc": {"tf": 1}}, "df": 1}}}}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.core.field": {"tf": 1}, "fancy_signatures.core.field.UnTypedArgField": {"tf": 1}, "fancy_signatures.core.field.UnTypedArgField.__init__": {"tf": 1}, "fancy_signatures.core.field.UnTypedArgField.set_type": {"tf": 1}, "fancy_signatures.core.field.TypedArgField": {"tf": 1}, "fancy_signatures.core.field.TypedArgField.__init__": {"tf": 1}, "fancy_signatures.core.field.TypedArgField.execute": {"tf": 1}}, "df": 7}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.api": {"tf": 1}, "fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.core": {"tf": 1}, "fancy_signatures.core.empty": {"tf": 1}, "fancy_signatures.core.empty.is_empty": {"tf": 1}, "fancy_signatures.core.field": {"tf": 1}, "fancy_signatures.core.field.UnTypedArgField": {"tf": 1}, "fancy_signatures.core.field.UnTypedArgField.__init__": {"tf": 1}, "fancy_signatures.core.field.UnTypedArgField.set_type": {"tf": 1}, "fancy_signatures.core.field.TypedArgField": {"tf": 1}, "fancy_signatures.core.field.TypedArgField.__init__": {"tf": 1}, "fancy_signatures.core.field.TypedArgField.execute": {"tf": 1}, "fancy_signatures.core.interface": {"tf": 1}, "fancy_signatures.core.interface.Validator": {"tf": 1}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.core.interface.Default": {"tf": 1}, "fancy_signatures.core.interface.Default.get": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.default": {"tf": 1}, "fancy_signatures.default.defaults": {"tf": 1}, "fancy_signatures.default.defaults.FactoryFunc": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.get": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.get": {"tf": 1}, "fancy_signatures.default.defaults.EmptyList": {"tf": 1}, "fancy_signatures.default.defaults.EmptyDict": {"tf": 1}, "fancy_signatures.default.defaults.EmptyTuple": {"tf": 1}, "fancy_signatures.default.defaults.EmptySet": {"tf": 1}, "fancy_signatures.exceptions": {"tf": 1}, "fancy_signatures.exceptions.ValidationError": {"tf": 1}, "fancy_signatures.exceptions.ValidationError.__init__": {"tf": 1}, "fancy_signatures.settings": {"tf": 1}, "fancy_signatures.settings.reset": {"tf": 1}, "fancy_signatures.settings.set": {"tf": 1}, "fancy_signatures.settings.get_typecast_handlers": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel.ALLOW": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel.WARN": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel.DISALLOW": {"tf": 1}, "fancy_signatures.typecasting": {"tf": 1}, "fancy_signatures.typecasting.default": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.factory": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}, "fancy_signatures.typecasting.generic_alias": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.handlers": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}, "fancy_signatures.typecasting.handlers.unregister_handler": {"tf": 1}, "fancy_signatures.typecasting.handlers.unregister_strict_handler": {"tf": 1}, "fancy_signatures.typecasting.special_origins": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}, "fancy_signatures.typecasting.union": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}, "fancy_signatures.validation": {"tf": 1}, "fancy_signatures.validation.mixins": {"tf": 1}, "fancy_signatures.validation.mixins.AllowOptionalMixin": {"tf": 1}, "fancy_signatures.validation.related": {"tf": 1}, "fancy_signatures.validation.related.related": {"tf": 1}, "fancy_signatures.validation.related.related.Related": {"tf": 1}, "fancy_signatures.validation.related.related.Related.__init__": {"tf": 1}, "fancy_signatures.validation.related.validators": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}, "fancy_signatures.validation.validators": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasLT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasEq.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.HasGT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}, "fancy_signatures.validation.validators.GE": {"tf": 1}, "fancy_signatures.validation.validators.GE.__init__": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT": {"tf": 1}, "fancy_signatures.validation.validators.GT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE": {"tf": 1}, "fancy_signatures.validation.validators.LE.__init__": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT": {"tf": 1}, "fancy_signatures.validation.validators.LT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.__init__": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.OptionalGE": {"tf": 1}, "fancy_signatures.validation.validators.OptionalGT": {"tf": 1}, "fancy_signatures.validation.validators.OptionalLE": {"tf": 1}, "fancy_signatures.validation.validators.OptionalLT": {"tf": 1}, "fancy_signatures.validation.validators.OptionalRegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalMultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalDecimalPlacesValidator": {"tf": 1}}, "df": 159}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.core.field.UnTypedArgField.set_type": {"tf": 1}, "fancy_signatures.settings.set": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.settings": {"tf": 1}, "fancy_signatures.settings.reset": {"tf": 1}, "fancy_signatures.settings.set": {"tf": 1}, "fancy_signatures.settings.get_typecast_handlers": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel.ALLOW": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel.WARN": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel.DISALLOW": {"tf": 1}}, "df": 8}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.typecasting.handlers.unregister_strict_handler": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.typecasting.special_origins.StringTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"fancy_signatures.typecasting.special_origins": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}}, "df": 21}}}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {"fancy_signatures.api": {"tf": 1}, "fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.api.validate": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "g": {"docs": {"fancy_signatures.api.arg": {"tf": 1}}, "df": 1, "s": {"docs": {"fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 3}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel.ALLOW": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures.validation.mixins.AllowOptionalMixin": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.typecasting.generic_alias": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}}, "df": 9}}}}, "n": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.typecasting.special_origins.AnyTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}}, "df": 3}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 24}, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.core.interface.Validator": {"tf": 1}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1}}, "df": 2, "s": {"docs": {"fancy_signatures.validation.related.validators": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}, "fancy_signatures.validation.validators": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasLT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasEq.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.HasGT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}, "fancy_signatures.validation.validators.GE": {"tf": 1}, "fancy_signatures.validation.validators.GE.__init__": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT": {"tf": 1}, "fancy_signatures.validation.validators.GT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE": {"tf": 1}, "fancy_signatures.validation.validators.LE.__init__": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT": {"tf": 1}, "fancy_signatures.validation.validators.LT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.__init__": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.OptionalGE": {"tf": 1}, "fancy_signatures.validation.validators.OptionalGT": {"tf": 1}, "fancy_signatures.validation.validators.OptionalLE": {"tf": 1}, "fancy_signatures.validation.validators.OptionalLT": {"tf": 1}, "fancy_signatures.validation.validators.OptionalRegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalMultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalDecimalPlacesValidator": {"tf": 1}}, "df": 60}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures.validation": {"tf": 1}, "fancy_signatures.validation.mixins": {"tf": 1}, "fancy_signatures.validation.mixins.AllowOptionalMixin": {"tf": 1}, "fancy_signatures.validation.related": {"tf": 1}, "fancy_signatures.validation.related.related": {"tf": 1}, "fancy_signatures.validation.related.related.Related": {"tf": 1}, "fancy_signatures.validation.related.related.Related.__init__": {"tf": 1}, "fancy_signatures.validation.related.validators": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}, "fancy_signatures.validation.validators": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasLT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasEq.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.HasGT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}, "fancy_signatures.validation.validators.GE": {"tf": 1}, "fancy_signatures.validation.validators.GE.__init__": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT": {"tf": 1}, "fancy_signatures.validation.validators.GT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE": {"tf": 1}, "fancy_signatures.validation.validators.LE.__init__": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT": {"tf": 1}, "fancy_signatures.validation.validators.LT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.__init__": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.OptionalGE": {"tf": 1}, "fancy_signatures.validation.validators.OptionalGT": {"tf": 1}, "fancy_signatures.validation.validators.OptionalLE": {"tf": 1}, "fancy_signatures.validation.validators.OptionalLT": {"tf": 1}, "fancy_signatures.validation.validators.OptionalRegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalMultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalDecimalPlacesValidator": {"tf": 1}}, "df": 67, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.exceptions.ValidationError": {"tf": 1}, "fancy_signatures.exceptions.ValidationError.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.core": {"tf": 1}, "fancy_signatures.core.empty": {"tf": 1}, "fancy_signatures.core.empty.is_empty": {"tf": 1}, "fancy_signatures.core.field": {"tf": 1}, "fancy_signatures.core.field.UnTypedArgField": {"tf": 1}, "fancy_signatures.core.field.UnTypedArgField.__init__": {"tf": 1}, "fancy_signatures.core.field.UnTypedArgField.set_type": {"tf": 1}, "fancy_signatures.core.field.TypedArgField": {"tf": 1}, "fancy_signatures.core.field.TypedArgField.__init__": {"tf": 1}, "fancy_signatures.core.field.TypedArgField.execute": {"tf": 1}, "fancy_signatures.core.interface": {"tf": 1}, "fancy_signatures.core.interface.Validator": {"tf": 1}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.core.interface.Default": {"tf": 1}, "fancy_signatures.core.interface.Default.get": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}}, "df": 18}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}}, "df": 11}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.core.empty": {"tf": 1}, "fancy_signatures.core.empty.is_empty": {"tf": 1.4142135623730951}}, "df": 2, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.default.defaults.EmptyList": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.default.defaults.EmptyDict": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.default.defaults.EmptyTuple": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.default.defaults.EmptySet": {"tf": 1}}, "df": 1}}}}}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.core.field.TypedArgField.execute": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.exceptions": {"tf": 1}, "fancy_signatures.exceptions.ValidationError": {"tf": 1}, "fancy_signatures.exceptions.ValidationError.__init__": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}}, "df": 2}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.core.empty.is_empty": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable.__init__": {"tf": 1}}, "df": 2}}}}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.validation.validators.IsInValidator": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.core.field.UnTypedArgField.__init__": {"tf": 1}, "fancy_signatures.core.field.TypedArgField.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.__init__": {"tf": 1}, "fancy_signatures.exceptions.ValidationError.__init__": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.__init__": {"tf": 1}, "fancy_signatures.validation.related.related.Related.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasLT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasEq.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasGT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable.__init__": {"tf": 1}, "fancy_signatures.validation.validators.GE.__init__": {"tf": 1}, "fancy_signatures.validation.validators.GT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.LE.__init__": {"tf": 1}, "fancy_signatures.validation.validators.LT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.__init__": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.__init__": {"tf": 1}}, "df": 27}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.core.interface": {"tf": 1}, "fancy_signatures.core.interface.Validator": {"tf": 1}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.core.interface.Default": {"tf": 1}, "fancy_signatures.core.interface.Default.get": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}}, "df": 8}}}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.core.field.UnTypedArgField": {"tf": 1}, "fancy_signatures.core.field.UnTypedArgField.__init__": {"tf": 1}, "fancy_signatures.core.field.UnTypedArgField.set_type": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.typecasting.handlers.unregister_handler": {"tf": 1}, "fancy_signatures.typecasting.handlers.unregister_strict_handler": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures.typecasting.union": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}}, "df": 5, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.typecasting.union.UnionTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.core.field.UnTypedArgField.set_type": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.core.field.TypedArgField": {"tf": 1}, "fancy_signatures.core.field.TypedArgField.__init__": {"tf": 1}, "fancy_signatures.core.field.TypedArgField.execute": {"tf": 1}}, "df": 3}}}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.settings.get_typecast_handlers": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.core.interface.TypeCaster": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"fancy_signatures.typecasting": {"tf": 1}, "fancy_signatures.typecasting.default": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.factory": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}, "fancy_signatures.typecasting.generic_alias": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.handlers": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}, "fancy_signatures.typecasting.handlers.unregister_handler": {"tf": 1}, "fancy_signatures.typecasting.handlers.unregister_strict_handler": {"tf": 1}, "fancy_signatures.typecasting.special_origins": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}, "fancy_signatures.typecasting.union": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}}, "df": 46}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.core.interface.Default": {"tf": 1}, "fancy_signatures.core.interface.Default.get": {"tf": 1}, "fancy_signatures.default": {"tf": 1}, "fancy_signatures.default.defaults": {"tf": 1}, "fancy_signatures.default.defaults.FactoryFunc": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.get": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.get": {"tf": 1}, "fancy_signatures.default.defaults.EmptyList": {"tf": 1}, "fancy_signatures.default.defaults.EmptyDict": {"tf": 1}, "fancy_signatures.default.defaults.EmptyTuple": {"tf": 1}, "fancy_signatures.default.defaults.EmptySet": {"tf": 1}, "fancy_signatures.typecasting.default": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}}, "df": 19, "s": {"docs": {"fancy_signatures.default.defaults": {"tf": 1}, "fancy_signatures.default.defaults.FactoryFunc": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.get": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.get": {"tf": 1}, "fancy_signatures.default.defaults.EmptyList": {"tf": 1}, "fancy_signatures.default.defaults.EmptyDict": {"tf": 1}, "fancy_signatures.default.defaults.EmptyTuple": {"tf": 1}, "fancy_signatures.default.defaults.EmptySet": {"tf": 1}}, "df": 12}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.default.defaults.DefaultValue": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.get": {"tf": 1}}, "df": 3}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.default.defaults.DefaultFactory": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.get": {"tf": 1}}, "df": 3}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.validation.validators.DecimalPlacesValidator": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel.DISALLOW": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.typecasting.generic_alias.DictTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.validation.validators.GE": {"tf": 1}, "fancy_signatures.validation.validators.GE.__init__": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}}, "df": 3, "t": {"docs": {"fancy_signatures.core.interface.Default.get": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.get": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.get": {"tf": 1}, "fancy_signatures.settings.get_typecast_handlers": {"tf": 1}}, "df": 4}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"fancy_signatures.typecasting.generic_alias": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}}, "df": 9}}}}}}, "t": {"docs": {"fancy_signatures.validation.validators.GT": {"tf": 1}, "fancy_signatures.validation.validators.GT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.settings.reset": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.validation.validators.RegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.validation.related": {"tf": 1}, "fancy_signatures.validation.related.related": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.related.Related": {"tf": 1.7320508075688772}, "fancy_signatures.validation.related.related.Related.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.validation.related.validators": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 10}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}, "fancy_signatures.typecasting.handlers.unregister_handler": {"tf": 1}, "fancy_signatures.typecasting.handlers.unregister_strict_handler": {"tf": 1}}, "df": 3, "s": {"docs": {"fancy_signatures.settings.get_typecast_handlers": {"tf": 1}, "fancy_signatures.typecasting.handlers": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}, "fancy_signatures.typecasting.handlers.unregister_handler": {"tf": 1}, "fancy_signatures.typecasting.handlers.unregister_strict_handler": {"tf": 1}}, "df": 5}}}}}}, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.validation.validators.HasLe": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLength.__init__": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {"fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasLT.__init__": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "q": {"docs": {"fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasEq.__init__": {"tf": 1}}, "df": 2}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.HasGT.__init__": {"tf": 1}}, "df": 2}, "e": {"docs": {"fancy_signatures.validation.validators.HasGe": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel.ALLOW": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel.WARN": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel.DISALLOW": {"tf": 1}}, "df": 4}}}}}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.typecasting.special_origins.ProtocolTypecaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel.WARN": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}}}}, "e": {"docs": {"fancy_signatures.validation.validators.LE": {"tf": 1}, "fancy_signatures.validation.validators.LE.__init__": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}}, "df": 3}, "t": {"docs": {"fancy_signatures.validation.validators.LT": {"tf": 1}, "fancy_signatures.validation.validators.LT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}}, "df": 3}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.typecasting.special_origins": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}}, "df": 21}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.validation.validators.OptionalGE": {"tf": 1}}, "df": 1}, "t": {"docs": {"fancy_signatures.validation.validators.OptionalGT": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.validation.validators.OptionalLE": {"tf": 1}}, "df": 1}, "t": {"docs": {"fancy_signatures.validation.validators.OptionalLT": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.validation.validators.OptionalRegexValidator": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.validation.validators.OptionalMultipleOfValidator": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.validation.validators.OptionalDecimalPlacesValidator": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.typecasting.special_origins.BooleanTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.validation.validators.BlackListedValues": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.__init__": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.typecasting.special_origins.NoneTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.validation.mixins": {"tf": 1}, "fancy_signatures.validation.mixins.AllowOptionalMixin": {"tf": 1}}, "df": 2}}}}, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"fancy_signatures.validation.validators.MinLength": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}}, "df": 3}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.validation.validators.MultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"fancy_signatures.validation.validators.MaxLength": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}}, "df": 3}}}}}}}}}, "x": {"docs": {"fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}}, "df": 1}}}, "annotation": {"root": {"docs": {"fancy_signatures.default.defaults.EmptyList": {"tf": 1}, "fancy_signatures.default.defaults.EmptyDict": {"tf": 1}, "fancy_signatures.default.defaults.EmptyTuple": {"tf": 1}, "fancy_signatures.default.defaults.EmptySet": {"tf": 1}}, "df": 4, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.default.defaults.EmptyList": {"tf": 1}, "fancy_signatures.default.defaults.EmptyDict": {"tf": 1}, "fancy_signatures.default.defaults.EmptyTuple": {"tf": 1}, "fancy_signatures.default.defaults.EmptySet": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.default.defaults.EmptyList": {"tf": 1}, "fancy_signatures.default.defaults.EmptyDict": {"tf": 1}, "fancy_signatures.default.defaults.EmptyTuple": {"tf": 1}, "fancy_signatures.default.defaults.EmptySet": {"tf": 1}}, "df": 4}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.default.defaults.EmptyList": {"tf": 1}, "fancy_signatures.default.defaults.EmptyDict": {"tf": 1}, "fancy_signatures.default.defaults.EmptyTuple": {"tf": 1}, "fancy_signatures.default.defaults.EmptySet": {"tf": 1}}, "df": 4, "s": {"docs": {"fancy_signatures.default.defaults.EmptyList": {"tf": 1}, "fancy_signatures.default.defaults.EmptyDict": {"tf": 1}, "fancy_signatures.default.defaults.EmptyTuple": {"tf": 1}, "fancy_signatures.default.defaults.EmptySet": {"tf": 1}}, "df": 4}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.default.defaults.EmptyList": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.default.defaults.EmptyDict": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.default.defaults.EmptyTuple": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.default.defaults.EmptySet": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}}}, "default_value": {"root": {"docs": {"fancy_signatures.default.defaults.EmptyList": {"tf": 1.4142135623730951}, "fancy_signatures.default.defaults.EmptyDict": {"tf": 1.4142135623730951}, "fancy_signatures.default.defaults.EmptyTuple": {"tf": 1.4142135623730951}, "fancy_signatures.default.defaults.EmptySet": {"tf": 1.4142135623730951}, "fancy_signatures.settings.ProtocolHandlingLevel.ALLOW": {"tf": 1.4142135623730951}, "fancy_signatures.settings.ProtocolHandlingLevel.WARN": {"tf": 1.4142135623730951}, "fancy_signatures.settings.ProtocolHandlingLevel.DISALLOW": {"tf": 1.4142135623730951}}, "df": 7, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"fancy_signatures.default.defaults.FactoryFunc": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.default.defaults.FactoryFunc": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.default.defaults.FactoryFunc": {"tf": 1}}, "df": 1}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel.ALLOW": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.default.defaults.EmptyList": {"tf": 1}, "fancy_signatures.default.defaults.EmptyDict": {"tf": 1}, "fancy_signatures.default.defaults.EmptyTuple": {"tf": 1}, "fancy_signatures.default.defaults.EmptySet": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel.ALLOW": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel.WARN": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel.DISALLOW": {"tf": 1}}, "df": 7}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.default.defaults.EmptyList": {"tf": 1}, "fancy_signatures.default.defaults.EmptyDict": {"tf": 1}, "fancy_signatures.default.defaults.EmptyTuple": {"tf": 1}, "fancy_signatures.default.defaults.EmptySet": {"tf": 1}}, "df": 4}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.default.defaults.EmptyList": {"tf": 1}, "fancy_signatures.default.defaults.EmptyDict": {"tf": 1}, "fancy_signatures.default.defaults.EmptyTuple": {"tf": 1}, "fancy_signatures.default.defaults.EmptySet": {"tf": 1}}, "df": 4}}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.default.defaults.EmptyList": {"tf": 1}, "fancy_signatures.default.defaults.EmptyDict": {"tf": 1}, "fancy_signatures.default.defaults.EmptyTuple": {"tf": 1}, "fancy_signatures.default.defaults.EmptySet": {"tf": 1}}, "df": 4, "s": {"docs": {"fancy_signatures.default.defaults.EmptyList": {"tf": 1}, "fancy_signatures.default.defaults.EmptyDict": {"tf": 1}, "fancy_signatures.default.defaults.EmptyTuple": {"tf": 1}, "fancy_signatures.default.defaults.EmptySet": {"tf": 1}}, "df": 4}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.default.defaults.EmptyList": {"tf": 1}, "fancy_signatures.default.defaults.EmptyDict": {"tf": 1}, "fancy_signatures.default.defaults.EmptyTuple": {"tf": 1}, "fancy_signatures.default.defaults.EmptySet": {"tf": 1}}, "df": 4}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel.DISALLOW": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.default.defaults.EmptyList": {"tf": 1}, "fancy_signatures.default.defaults.EmptyDict": {"tf": 1}, "fancy_signatures.default.defaults.EmptyTuple": {"tf": 1}, "fancy_signatures.default.defaults.EmptySet": {"tf": 1}}, "df": 4}}}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.default.defaults.EmptyList": {"tf": 1}, "fancy_signatures.default.defaults.EmptyDict": {"tf": 1}, "fancy_signatures.default.defaults.EmptyTuple": {"tf": 1}, "fancy_signatures.default.defaults.EmptySet": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel.ALLOW": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel.WARN": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel.DISALLOW": {"tf": 1}}, "df": 7}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel.ALLOW": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel.WARN": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel.DISALLOW": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}}}}}}, "x": {"2": {"7": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel.ALLOW": {"tf": 1.4142135623730951}, "fancy_signatures.settings.ProtocolHandlingLevel.WARN": {"tf": 1.4142135623730951}, "fancy_signatures.settings.ProtocolHandlingLevel.DISALLOW": {"tf": 1.4142135623730951}}, "df": 3}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel.WARN": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "signature": {"root": {"docs": {"fancy_signatures.api.arg": {"tf": 9.899494936611665}, "fancy_signatures.api.validate": {"tf": 11.045361017187261}, "fancy_signatures.core.empty.is_empty": {"tf": 4}, "fancy_signatures.core.field.UnTypedArgField.__init__": {"tf": 7.745966692414834}, "fancy_signatures.core.field.UnTypedArgField.set_type": {"tf": 6.782329983125268}, "fancy_signatures.core.field.TypedArgField.__init__": {"tf": 9}, "fancy_signatures.core.field.TypedArgField.execute": {"tf": 6.6332495807108}, "fancy_signatures.core.interface.Validator.validate": {"tf": 4.898979485566356}, "fancy_signatures.core.interface.Default.get": {"tf": 4.69041575982343}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 4.47213595499958}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 4.69041575982343}, "fancy_signatures.default.defaults.DefaultValue.__init__": {"tf": 6.324555320336759}, "fancy_signatures.default.defaults.DefaultValue.get": {"tf": 4.898979485566356}, "fancy_signatures.default.defaults.DefaultFactory.__init__": {"tf": 2.8284271247461903}, "fancy_signatures.default.defaults.DefaultFactory.get": {"tf": 4.898979485566356}, "fancy_signatures.exceptions.ValidationError.__init__": {"tf": 5.477225575051661}, "fancy_signatures.settings.reset": {"tf": 3}, "fancy_signatures.settings.set": {"tf": 4.898979485566356}, "fancy_signatures.settings.get_typecast_handlers": {"tf": 6.782329983125268}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 4.47213595499958}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 4.47213595499958}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 5.291502622129181}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.__init__": {"tf": 3.4641016151377544}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 4.47213595499958}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 5.477225575051661}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.__init__": {"tf": 3.4641016151377544}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 4.47213595499958}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 4.47213595499958}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 7.810249675906654}, "fancy_signatures.typecasting.handlers.unregister_handler": {"tf": 4}, "fancy_signatures.typecasting.handlers.unregister_strict_handler": {"tf": 4}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 4.47213595499958}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 4.47213595499958}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 4.69041575982343}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 4.47213595499958}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.__init__": {"tf": 3.4641016151377544}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 4.47213595499958}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 4.47213595499958}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 4.47213595499958}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 4.47213595499958}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 4.47213595499958}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 4.47213595499958}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.__init__": {"tf": 3.4641016151377544}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 4.47213595499958}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 4.58257569495584}, "fancy_signatures.typecasting.union.UnionTypeCaster.__init__": {"tf": 3.4641016151377544}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 4.47213595499958}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 4.898979485566356}, "fancy_signatures.validation.related.related.Related.__init__": {"tf": 6.6332495807108}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 7.0710678118654755}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 7.681145747868608}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 7.0710678118654755}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 7.0710678118654755}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 7.874007874011811}, "fancy_signatures.validation.validators.HasLength.__init__": {"tf": 4}, "fancy_signatures.validation.validators.HasLT.__init__": {"tf": 4}, "fancy_signatures.validation.validators.HasEq.__init__": {"tf": 4}, "fancy_signatures.validation.validators.HasGT.__init__": {"tf": 4}, "fancy_signatures.validation.validators.IsIterable.__init__": {"tf": 4}, "fancy_signatures.validation.validators.GE.__init__": {"tf": 3.4641016151377544}, "fancy_signatures.validation.validators.GE.validate": {"tf": 4.898979485566356}, "fancy_signatures.validation.validators.GT.__init__": {"tf": 3.4641016151377544}, "fancy_signatures.validation.validators.GT.validate": {"tf": 4.898979485566356}, "fancy_signatures.validation.validators.LE.__init__": {"tf": 3.4641016151377544}, "fancy_signatures.validation.validators.LE.validate": {"tf": 4.898979485566356}, "fancy_signatures.validation.validators.LT.__init__": {"tf": 3.4641016151377544}, "fancy_signatures.validation.validators.LT.validate": {"tf": 4.898979485566356}, "fancy_signatures.validation.validators.MaxLength.__init__": {"tf": 3.4641016151377544}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 4.898979485566356}, "fancy_signatures.validation.validators.MinLength.__init__": {"tf": 3.4641016151377544}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 4.898979485566356}, "fancy_signatures.validation.validators.BlackListedValues.__init__": {"tf": 4}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 4.898979485566356}, "fancy_signatures.validation.validators.IsInValidator.__init__": {"tf": 4}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 4.898979485566356}, "fancy_signatures.validation.validators.RegexValidator.__init__": {"tf": 3.4641016151377544}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 4.47213595499958}, "fancy_signatures.validation.validators.MultipleOfValidator.__init__": {"tf": 4.123105625617661}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 5.477225575051661}, "fancy_signatures.validation.validators.DecimalPlacesValidator.__init__": {"tf": 3.4641016151377544}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 4.47213595499958}}, "df": 81, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.core.field.UnTypedArgField.__init__": {"tf": 1}, "fancy_signatures.core.field.TypedArgField.__init__": {"tf": 1}}, "df": 3, "s": {"docs": {"fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.core.field.UnTypedArgField.__init__": {"tf": 1}, "fancy_signatures.core.field.TypedArgField.__init__": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 6}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.core.field.TypedArgField.execute": {"tf": 1}, "fancy_signatures.core.interface.Default.get": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.get": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.get": {"tf": 1}, "fancy_signatures.settings.set": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}, "fancy_signatures.validation.validators.GE.__init__": {"tf": 1}, "fancy_signatures.validation.validators.GT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.LE.__init__": {"tf": 1}, "fancy_signatures.validation.validators.LT.__init__": {"tf": 1}}, "df": 30, "s": {"docs": {"fancy_signatures.validation.validators.BlackListedValues.__init__": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.__init__": {"tf": 1}}, "df": 2}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.core.field.UnTypedArgField.__init__": {"tf": 1}, "fancy_signatures.core.field.TypedArgField.__init__": {"tf": 1}, "fancy_signatures.exceptions.ValidationError.__init__": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 8}}}, "a": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.core.field.TypedArgField.execute": {"tf": 1}}, "df": 2}}}, "t": {"docs": {"fancy_signatures.default.defaults.DefaultValue.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}}, "df": 3, "t": {"docs": {"fancy_signatures.validation.validators.GE.validate": {"tf": 1.4142135623730951}}, "df": 1}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.validation.validators.GT.validate": {"tf": 1.4142135623730951}}, "df": 1}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.api.arg": {"tf": 1.4142135623730951}, "fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.core.field.UnTypedArgField.__init__": {"tf": 1.4142135623730951}, "fancy_signatures.core.field.UnTypedArgField.set_type": {"tf": 1.4142135623730951}, "fancy_signatures.core.field.TypedArgField.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.default.defaults.DefaultValue.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.__init__": {"tf": 1}, "fancy_signatures.settings.get_typecast_handlers": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 15}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.api.validate": {"tf": 1.4142135623730951}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.default.defaults.DefaultFactory.__init__": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.__init__": {"tf": 1}, "fancy_signatures.validation.related.related.Related.__init__": {"tf": 1}}, "df": 3, "t": {"docs": {"fancy_signatures.api.validate": {"tf": 1.7320508075688772}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.core.field.UnTypedArgField.set_type": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.validation.validators.MultipleOfValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.api.arg": {"tf": 1.4142135623730951}, "fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.core.field.UnTypedArgField.__init__": {"tf": 1.4142135623730951}, "fancy_signatures.core.field.UnTypedArgField.set_type": {"tf": 1.4142135623730951}, "fancy_signatures.core.field.TypedArgField.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.default.defaults.DefaultValue.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.__init__": {"tf": 1}, "fancy_signatures.settings.get_typecast_handlers": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 15}}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.core.field.TypedArgField.execute": {"tf": 1}, "fancy_signatures.exceptions.ValidationError.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.settings.set": {"tf": 1}, "fancy_signatures.settings.get_typecast_handlers": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.validation.related.related.Related.__init__": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.RegexValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1.4142135623730951}}, "df": 13, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.core.field.TypedArgField.execute": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"fancy_signatures.core.field.UnTypedArgField.set_type": {"tf": 1}, "fancy_signatures.core.field.TypedArgField.execute": {"tf": 1}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.core.interface.Default.get": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.get": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.get": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 39}}, "t": {"docs": {"fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"fancy_signatures.settings.set": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.api.arg": {"tf": 1.4142135623730951}, "fancy_signatures.core.field.UnTypedArgField.__init__": {"tf": 1.4142135623730951}, "fancy_signatures.core.field.UnTypedArgField.set_type": {"tf": 1.4142135623730951}, "fancy_signatures.core.field.TypedArgField.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.default.defaults.DefaultValue.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.__init__": {"tf": 1}, "fancy_signatures.settings.get_typecast_handlers": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}}, "df": 9}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.__init__": {"tf": 1}, "fancy_signatures.validation.related.related.Related.__init__": {"tf": 1}}, "df": 3}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.default.defaults.DefaultFactory.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.DecimalPlacesValidator.__init__": {"tf": 1}}, "df": 6, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.api.arg": {"tf": 1.4142135623730951}, "fancy_signatures.core.field.UnTypedArgField.__init__": {"tf": 1.4142135623730951}, "fancy_signatures.core.field.UnTypedArgField.set_type": {"tf": 1}, "fancy_signatures.core.field.TypedArgField.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.settings.get_typecast_handlers": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}}, "df": 7}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.api.arg": {"tf": 2}, "fancy_signatures.api.validate": {"tf": 1.7320508075688772}, "fancy_signatures.settings.reset": {"tf": 1}, "fancy_signatures.settings.set": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}, "fancy_signatures.typecasting.handlers.unregister_handler": {"tf": 1}, "fancy_signatures.typecasting.handlers.unregister_strict_handler": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 13, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.validation.related.related.Related.__init__": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.core.field.TypedArgField.execute": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.api.arg": {"tf": 1.4142135623730951}, "fancy_signatures.core.field.UnTypedArgField.__init__": {"tf": 1.4142135623730951}, "fancy_signatures.core.field.TypedArgField.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.settings.get_typecast_handlers": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.core.field.UnTypedArgField.__init__": {"tf": 1}, "fancy_signatures.core.field.TypedArgField.__init__": {"tf": 1}}, "df": 3}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.api.validate": {"tf": 2}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1.7320508075688772}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1.7320508075688772}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1.7320508075688772}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1.7320508075688772}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1.7320508075688772}}, "df": 6}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.api.validate": {"tf": 1.4142135623730951}, "fancy_signatures.core.empty.is_empty": {"tf": 1}, "fancy_signatures.core.field.UnTypedArgField.__init__": {"tf": 1}, "fancy_signatures.core.field.TypedArgField.__init__": {"tf": 1}, "fancy_signatures.core.field.TypedArgField.execute": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 24}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.validation.validators.MultipleOfValidator.__init__": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"fancy_signatures.core.interface.Validator.validate": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.Default.get": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.get": {"tf": 1.4142135623730951}, "fancy_signatures.default.defaults.DefaultFactory.get": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.BlackListedValues.__init__": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.IsInValidator.__init__": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1.4142135623730951}}, "df": 9, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 6}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.settings.get_typecast_handlers": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.handlers.unregister_handler": {"tf": 1}, "fancy_signatures.typecasting.handlers.unregister_strict_handler": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.__init__": {"tf": 1}}, "df": 11, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.core.field.UnTypedArgField.set_type": {"tf": 1.4142135623730951}, "fancy_signatures.core.field.TypedArgField.__init__": {"tf": 1.4142135623730951}, "fancy_signatures.settings.get_typecast_handlers": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}}, "df": 5}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.core.field.UnTypedArgField.set_type": {"tf": 1}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.settings.get_typecast_handlers": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}, "fancy_signatures.typecasting.handlers.unregister_handler": {"tf": 1}, "fancy_signatures.typecasting.handlers.unregister_strict_handler": {"tf": 1}}, "df": 5}}}}}, "s": {"docs": {"fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"fancy_signatures.settings.get_typecast_handlers": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.core.empty.is_empty": {"tf": 1}, "fancy_signatures.core.field.TypedArgField.execute": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.Default.get": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.__init__": {"tf": 1}, "fancy_signatures.settings.set": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}, "fancy_signatures.validation.validators.GE.__init__": {"tf": 1}, "fancy_signatures.validation.validators.GT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.LE.__init__": {"tf": 1}, "fancy_signatures.validation.validators.LT.__init__": {"tf": 1}}, "df": 38}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.validation.related.related.Related.__init__": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.validators.HasLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasLT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasEq.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasGT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable.__init__": {"tf": 1}}, "df": 10}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 5}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"fancy_signatures.api.validate": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {"fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 12, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.default.defaults.DefaultValue.__init__": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"fancy_signatures.core.empty.is_empty": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.exceptions.ValidationError.__init__": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}}, "df": 22}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures.validation.validators.RegexValidator.__init__": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.validation.validators.DecimalPlacesValidator.__init__": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.default.defaults.DefaultValue.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.__init__": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"fancy_signatures.default.defaults.DefaultValue.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.default.defaults.DefaultValue.__init__": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}}, "df": 3, "t": {"docs": {"fancy_signatures.validation.validators.LE.validate": {"tf": 1.4142135623730951}}, "df": 1}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.validation.validators.LT.validate": {"tf": 1.4142135623730951}}, "df": 1}}}, "x": {"2": {"7": {"docs": {"fancy_signatures.default.defaults.DefaultFactory.__init__": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {}, "df": 0}, "docs": {"fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.exceptions.ValidationError.__init__": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"fancy_signatures.validation.validators.MaxLength.__init__": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures.validation.validators.MinLength.__init__": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.handlers.unregister_handler": {"tf": 1}, "fancy_signatures.typecasting.handlers.unregister_strict_handler": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.__init__": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.__init__": {"tf": 1}}, "df": 8, "s": {"docs": {"fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}}, "df": 1}}}}}}}}}, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.validation.related.related.Related.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasLength.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasLT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasEq.__init__": {"tf": 1}, "fancy_signatures.validation.validators.HasGT.__init__": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable.__init__": {"tf": 1}}, "df": 6}}}}}}}}, "bases": {"root": {"docs": {"fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.MultipleOfValidator": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.core.field.TypedArgField": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.typecasting.union.UnionTypeCaster": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"fancy_signatures.core.interface.Validator": {"tf": 1}, "fancy_signatures.core.interface.Default": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 11}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster": {"tf": 1}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.typecasting.union.UnionTypeCaster": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.typecasting.generic_alias.DictTypeCaster": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.typecasting.special_origins.StringTypeCaster": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"fancy_signatures.typecasting.special_origins.BooleanTypeCaster": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.typecasting.special_origins.NoneTypeCaster": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "~": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.core.interface.Validator": {"tf": 1}, "fancy_signatures.core.interface.Default": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster": {"tf": 1}}, "df": 3}}}}}}}}, "[": {"docs": {}, "df": 0, "~": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.validation.validators.OptionalGE": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "~": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.validation.validators.OptionalGT": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "c": {"docs": {"fancy_signatures.core.interface.Validator": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.Default": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.TypeCaster": {"tf": 1.4142135623730951}}, "df": 3}}, "n": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster": {"tf": 1}}, "df": 2}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures.validation.validators.OptionalGE": {"tf": 1}, "fancy_signatures.validation.validators.OptionalGT": {"tf": 1}, "fancy_signatures.validation.validators.OptionalLE": {"tf": 1}, "fancy_signatures.validation.validators.OptionalLT": {"tf": 1}}, "df": 4}}}}}}}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.default.defaults.DefaultValue": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster": {"tf": 1}, "fancy_signatures.validation.mixins.AllowOptionalMixin": {"tf": 1}, "fancy_signatures.validation.validators.GE": {"tf": 1}, "fancy_signatures.validation.validators.GT": {"tf": 1}, "fancy_signatures.validation.validators.LE": {"tf": 1}, "fancy_signatures.validation.validators.LT": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength": {"tf": 1}, "fancy_signatures.validation.validators.MinLength": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalGE": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.OptionalGT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.OptionalLE": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.OptionalLT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.OptionalRegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalMultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalDecimalPlacesValidator": {"tf": 1}}, "df": 31}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.validation.validators.MultipleOfValidator": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.default.defaults.DefaultValue": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster": {"tf": 1}, "fancy_signatures.validation.mixins.AllowOptionalMixin": {"tf": 1}, "fancy_signatures.validation.validators.GE": {"tf": 1}, "fancy_signatures.validation.validators.GT": {"tf": 1}, "fancy_signatures.validation.validators.LE": {"tf": 1}, "fancy_signatures.validation.validators.LT": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength": {"tf": 1}, "fancy_signatures.validation.validators.MinLength": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalGE": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.OptionalGT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.OptionalLE": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.OptionalLT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.OptionalRegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalMultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalDecimalPlacesValidator": {"tf": 1}}, "df": 31}}}}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.default.defaults.DefaultValue": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster": {"tf": 1}, "fancy_signatures.validation.mixins.AllowOptionalMixin": {"tf": 1}, "fancy_signatures.validation.validators.GE": {"tf": 1}, "fancy_signatures.validation.validators.GT": {"tf": 1}, "fancy_signatures.validation.validators.LE": {"tf": 1}, "fancy_signatures.validation.validators.LT": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength": {"tf": 1}, "fancy_signatures.validation.validators.MinLength": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalRegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalMultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalDecimalPlacesValidator": {"tf": 1}}, "df": 27}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.default.defaults.DefaultValue": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster": {"tf": 1}, "fancy_signatures.validation.mixins.AllowOptionalMixin": {"tf": 1}, "fancy_signatures.validation.validators.GE": {"tf": 1}, "fancy_signatures.validation.validators.GT": {"tf": 1}, "fancy_signatures.validation.validators.LE": {"tf": 1}, "fancy_signatures.validation.validators.LT": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength": {"tf": 1}, "fancy_signatures.validation.validators.MinLength": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalRegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalMultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalDecimalPlacesValidator": {"tf": 1}}, "df": 27}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "~": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.default.defaults.DefaultValue": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory": {"tf": 1}}, "df": 2}}}}}}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.exceptions.ValidationError": {"tf": 1}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures.exceptions.ValidationError": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1.4142135623730951}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 8, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"fancy_signatures.typecasting.special_origins.ProtocolTypecaster": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"fancy_signatures.validation.mixins.AllowOptionalMixin": {"tf": 1}, "fancy_signatures.validation.validators.OptionalRegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalMultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalDecimalPlacesValidator": {"tf": 1}}, "df": 4}}}}}}, "~": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.validation.validators.GE": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.validation.validators.GT": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.validation.validators.MaxLength": {"tf": 1}, "fancy_signatures.validation.validators.MinLength": {"tf": 1}}, "df": 2}}}}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.validation.validators.LE": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.validation.validators.LT": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"fancy_signatures.validation.validators.BlackListedValues": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.validation.validators.RegexValidator": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.validation.validators.MultipleOfValidator": {"tf": 1}}, "df": 1}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.validation.validators.DecimalPlacesValidator": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"fancy_signatures.validation.validators.OptionalGE": {"tf": 1}, "fancy_signatures.validation.validators.OptionalGT": {"tf": 1}, "fancy_signatures.validation.validators.OptionalLE": {"tf": 1}, "fancy_signatures.validation.validators.OptionalLT": {"tf": 1}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures.validation.validators.OptionalGE": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.OptionalGT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.OptionalLE": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.OptionalLT": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "~": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.validation.mixins.AllowOptionalMixin": {"tf": 1}, "fancy_signatures.validation.validators.OptionalRegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalMultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalDecimalPlacesValidator": {"tf": 1}}, "df": 4}}}}}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "q": {"docs": {"fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 3}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.validation.validators.OptionalGE": {"tf": 1}, "fancy_signatures.validation.validators.OptionalGT": {"tf": 1}, "fancy_signatures.validation.validators.OptionalLE": {"tf": 1}, "fancy_signatures.validation.validators.OptionalLT": {"tf": 1}}, "df": 4}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "~": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.validation.validators.OptionalLE": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "~": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.validation.validators.OptionalLT": {"tf": 1}}, "df": 1}}}}}}}}}, "doc": {"root": {"0": {"docs": {"fancy_signatures": {"tf": 3.3166247903554}, "fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 9}, "1": {"0": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {"fancy_signatures": {"tf": 3.1622776601683795}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 2.449489742783178}}, "df": 2}, "2": {"0": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1}, "2": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}, "5": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1}, "7": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"fancy_signatures": {"tf": 3}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1.4142135623730951}}, "df": 2}, "3": {"9": {"docs": {"fancy_signatures": {"tf": 2}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1.4142135623730951}}, "df": 2}, "docs": {"fancy_signatures": {"tf": 3.1622776601683795}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1.7320508075688772}}, "df": 2}, "4": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}, "5": {"4": {"4": {"docs": {"fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 8}, "docs": {}, "df": 0}, "docs": {"fancy_signatures": {"tf": 1.7320508075688772}}, "df": 1}, "6": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1}, "7": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}, "8": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"fancy_signatures": {"tf": 46.76537180435969}, "fancy_signatures.api": {"tf": 1.7320508075688772}, "fancy_signatures.api.arg": {"tf": 4.358898943540674}, "fancy_signatures.api.validate": {"tf": 4.123105625617661}, "fancy_signatures.core": {"tf": 1.7320508075688772}, "fancy_signatures.core.empty": {"tf": 1.7320508075688772}, "fancy_signatures.core.empty.is_empty": {"tf": 3.4641016151377544}, "fancy_signatures.core.field": {"tf": 1.7320508075688772}, "fancy_signatures.core.field.UnTypedArgField": {"tf": 1.7320508075688772}, "fancy_signatures.core.field.UnTypedArgField.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.core.field.UnTypedArgField.set_type": {"tf": 1.7320508075688772}, "fancy_signatures.core.field.TypedArgField": {"tf": 1.7320508075688772}, "fancy_signatures.core.field.TypedArgField.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.core.field.TypedArgField.execute": {"tf": 1.7320508075688772}, "fancy_signatures.core.interface": {"tf": 1.7320508075688772}, "fancy_signatures.core.interface.Validator": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.Validator.validate": {"tf": 3.3166247903554}, "fancy_signatures.core.interface.Default": {"tf": 2.23606797749979}, "fancy_signatures.core.interface.Default.get": {"tf": 2.8284271247461903}, "fancy_signatures.core.interface.TypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 3.605551275463989}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 3}, "fancy_signatures.default": {"tf": 1.7320508075688772}, "fancy_signatures.default.defaults": {"tf": 1.7320508075688772}, "fancy_signatures.default.defaults.FactoryFunc": {"tf": 1.7320508075688772}, "fancy_signatures.default.defaults.DefaultValue": {"tf": 2.23606797749979}, "fancy_signatures.default.defaults.DefaultValue.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.default.defaults.DefaultValue.get": {"tf": 2.8284271247461903}, "fancy_signatures.default.defaults.DefaultFactory": {"tf": 2.23606797749979}, "fancy_signatures.default.defaults.DefaultFactory.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.default.defaults.DefaultFactory.get": {"tf": 2.8284271247461903}, "fancy_signatures.default.defaults.EmptyList": {"tf": 1.7320508075688772}, "fancy_signatures.default.defaults.EmptyDict": {"tf": 1.7320508075688772}, "fancy_signatures.default.defaults.EmptyTuple": {"tf": 1.7320508075688772}, "fancy_signatures.default.defaults.EmptySet": {"tf": 1.7320508075688772}, "fancy_signatures.exceptions": {"tf": 1.7320508075688772}, "fancy_signatures.exceptions.ValidationError": {"tf": 1.7320508075688772}, "fancy_signatures.exceptions.ValidationError.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.settings": {"tf": 1.7320508075688772}, "fancy_signatures.settings.reset": {"tf": 1.4142135623730951}, "fancy_signatures.settings.set": {"tf": 2.8284271247461903}, "fancy_signatures.settings.get_typecast_handlers": {"tf": 2}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 14.866068747318506}, "fancy_signatures.settings.ProtocolHandlingLevel.ALLOW": {"tf": 1.7320508075688772}, "fancy_signatures.settings.ProtocolHandlingLevel.WARN": {"tf": 1.7320508075688772}, "fancy_signatures.settings.ProtocolHandlingLevel.DISALLOW": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.default": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 2.8284271247461903}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 3.605551275463989}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 3}, "fancy_signatures.typecasting.factory": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 3.3166247903554}, "fancy_signatures.typecasting.generic_alias": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 3.605551275463989}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 3}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 3.605551275463989}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 3}, "fancy_signatures.typecasting.handlers": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 2.8284271247461903}, "fancy_signatures.typecasting.handlers.unregister_handler": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.handlers.unregister_strict_handler": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.special_origins": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.special_origins.StringTypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 3.605551275463989}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 3}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 3.605551275463989}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 3}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 3.605551275463989}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 3}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 3.605551275463989}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 3}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 3.605551275463989}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 3}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 3.605551275463989}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 3}, "fancy_signatures.typecasting.union": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.union.UnionTypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.union.UnionTypeCaster.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 3.605551275463989}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 3}, "fancy_signatures.validation": {"tf": 1.7320508075688772}, "fancy_signatures.validation.mixins": {"tf": 1.7320508075688772}, "fancy_signatures.validation.mixins.AllowOptionalMixin": {"tf": 1.7320508075688772}, "fancy_signatures.validation.related": {"tf": 1.7320508075688772}, "fancy_signatures.validation.related.related": {"tf": 1.7320508075688772}, "fancy_signatures.validation.related.related.Related": {"tf": 1.7320508075688772}, "fancy_signatures.validation.related.related.Related.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.validation.related.validators": {"tf": 1.7320508075688772}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 3.3166247903554}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 3.3166247903554}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 3.3166247903554}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 3.1622776601683795}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 3.4641016151377544}, "fancy_signatures.validation.validators": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasLength": {"tf": 5.477225575051661}, "fancy_signatures.validation.validators.HasLength.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasLT": {"tf": 5.477225575051661}, "fancy_signatures.validation.validators.HasLT.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasEq": {"tf": 5.477225575051661}, "fancy_signatures.validation.validators.HasEq.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasGT": {"tf": 5.477225575051661}, "fancy_signatures.validation.validators.HasGT.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.IsIterable": {"tf": 5.477225575051661}, "fancy_signatures.validation.validators.IsIterable.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasLe": {"tf": 5.477225575051661}, "fancy_signatures.validation.validators.HasGe": {"tf": 5.477225575051661}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 5.477225575051661}, "fancy_signatures.validation.validators.GE": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.GE.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.GE.validate": {"tf": 3.3166247903554}, "fancy_signatures.validation.validators.GT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.GT.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.GT.validate": {"tf": 3.3166247903554}, "fancy_signatures.validation.validators.LE": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.LE.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.LE.validate": {"tf": 3.3166247903554}, "fancy_signatures.validation.validators.LT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.LT.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.LT.validate": {"tf": 3.3166247903554}, "fancy_signatures.validation.validators.MaxLength": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.MaxLength.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 3.3166247903554}, "fancy_signatures.validation.validators.MinLength": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.MinLength.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 3.3166247903554}, "fancy_signatures.validation.validators.BlackListedValues": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.BlackListedValues.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 3.3166247903554}, "fancy_signatures.validation.validators.IsInValidator": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.IsInValidator.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 3.3166247903554}, "fancy_signatures.validation.validators.RegexValidator": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.RegexValidator.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 3.3166247903554}, "fancy_signatures.validation.validators.MultipleOfValidator": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.MultipleOfValidator.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 3.3166247903554}, "fancy_signatures.validation.validators.DecimalPlacesValidator": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.DecimalPlacesValidator.__init__": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 3.3166247903554}, "fancy_signatures.validation.validators.OptionalGE": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.OptionalGT": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.OptionalLE": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.OptionalLT": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.OptionalRegexValidator": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.OptionalMultipleOfValidator": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.OptionalDecimalPlacesValidator": {"tf": 1.7320508075688772}}, "df": 159, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures": {"tf": 4.795831523312719}, "fancy_signatures.core.empty.is_empty": {"tf": 1}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 25, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {"fancy_signatures.api.arg": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}, "s": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 25}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.core.empty.is_empty": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}}, "df": 14}}, "l": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures": {"tf": 2}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"fancy_signatures": {"tf": 4.47213595499958}, "fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasEq": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasGT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLe": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasGe": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1.4142135623730951}}, "df": 10, "t": {"docs": {"fancy_signatures.api.validate": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures": {"tf": 2.8284271247461903}, "fancy_signatures.api.arg": {"tf": 1.4142135623730951}, "fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.core.interface.Validator": {"tf": 1}, "fancy_signatures.core.interface.Default": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory": {"tf": 1}, "fancy_signatures.validation.validators.GE": {"tf": 1}, "fancy_signatures.validation.validators.GT": {"tf": 1}, "fancy_signatures.validation.validators.LE": {"tf": 1}, "fancy_signatures.validation.validators.LT": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength": {"tf": 1}, "fancy_signatures.validation.validators.MinLength": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator": {"tf": 1}}, "df": 18, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}}}, "s": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}, "fancy_signatures.api.validate": {"tf": 1}}, "df": 2}}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.api.arg": {"tf": 1}}, "df": 1, "s": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}, "fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}}, "df": 3}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"fancy_signatures": {"tf": 5}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}}, "df": 3}}}, "r": {"docs": {"fancy_signatures": {"tf": 3.4641016151377544}, "fancy_signatures.api.arg": {"tf": 1.7320508075688772}, "fancy_signatures.core.interface.Validator": {"tf": 1}, "fancy_signatures.core.interface.Default": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory": {"tf": 1}, "fancy_signatures.exceptions.ValidationError": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasLT": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasEq": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasGT": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasLe": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasGe": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.GE": {"tf": 1}, "fancy_signatures.validation.validators.GT": {"tf": 1}, "fancy_signatures.validation.validators.LE": {"tf": 1}, "fancy_signatures.validation.validators.LT": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength": {"tf": 1}, "fancy_signatures.validation.validators.MinLength": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator": {"tf": 1}}, "df": 29}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 2.23606797749979}}, "df": 1}}}}}, "t": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.Default.get": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.get": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.get": {"tf": 1}, "fancy_signatures.settings.set": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1.4142135623730951}}, "df": 36, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures": {"tf": 2.23606797749979}, "fancy_signatures.api.arg": {"tf": 1.4142135623730951}, "fancy_signatures.core.empty.is_empty": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}}, "df": 5}}, "e": {"docs": {"fancy_signatures": {"tf": 5.916079783099616}, "fancy_signatures.api.arg": {"tf": 1.7320508075688772}, "fancy_signatures.api.validate": {"tf": 2.23606797749979}, "fancy_signatures.core.empty.is_empty": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.Validator.validate": {"tf": 2}, "fancy_signatures.core.interface.Default": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.Default.get": {"tf": 2}, "fancy_signatures.core.interface.TypeCaster": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 2}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1.7320508075688772}, "fancy_signatures.default.defaults.DefaultValue": {"tf": 1.4142135623730951}, "fancy_signatures.default.defaults.DefaultValue.get": {"tf": 2}, "fancy_signatures.default.defaults.DefaultFactory": {"tf": 1.4142135623730951}, "fancy_signatures.default.defaults.DefaultFactory.get": {"tf": 2}, "fancy_signatures.settings.set": {"tf": 2}, "fancy_signatures.settings.get_typecast_handlers": {"tf": 1.4142135623730951}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 2}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 2.8284271247461903}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 2}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 2}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 2.23606797749979}, "fancy_signatures.typecasting.special_origins.StringTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 2}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 2}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 2}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 2}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 2}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 2}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.union.UnionTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 2}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1.7320508075688772}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 2}, "fancy_signatures.validation.validators.GT.validate": {"tf": 2}, "fancy_signatures.validation.validators.LE.validate": {"tf": 2}, "fancy_signatures.validation.validators.LT.validate": {"tf": 2}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 2}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 2}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 2}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 2}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 2}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 2}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 2}}, "df": 73, "r": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}, "y": {"docs": {"fancy_signatures": {"tf": 2}, "fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 11}, "n": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}, "m": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.settings.reset": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 10}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 2.6457513110645907}, "fancy_signatures.api.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasEq": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasGT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLe": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasGe": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1.4142135623730951}}, "df": 12}, "n": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {"fancy_signatures": {"tf": 4.47213595499958}, "fancy_signatures.api.arg": {"tf": 2.449489742783178}, "fancy_signatures.api.validate": {"tf": 2.23606797749979}, "fancy_signatures.core.empty.is_empty": {"tf": 1}, "fancy_signatures.core.interface.Validator": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1.4142135623730951}, "fancy_signatures.settings.reset": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.union.UnionTypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1.4142135623730951}, "fancy_signatures.validation.mixins.AllowOptionalMixin": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1.7320508075688772}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1.7320508075688772}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.GE": {"tf": 1}, "fancy_signatures.validation.validators.GT": {"tf": 1}, "fancy_signatures.validation.validators.LE": {"tf": 1}, "fancy_signatures.validation.validators.LT": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength": {"tf": 1}, "fancy_signatures.validation.validators.MinLength": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalGE": {"tf": 1}, "fancy_signatures.validation.validators.OptionalGT": {"tf": 1}, "fancy_signatures.validation.validators.OptionalLE": {"tf": 1}, "fancy_signatures.validation.validators.OptionalLT": {"tf": 1}, "fancy_signatures.validation.validators.OptionalRegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalMultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalDecimalPlacesValidator": {"tf": 1}}, "df": 66}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 4}, "fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.core.interface.Default": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1.7320508075688772}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 2.8284271247461903}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 2.23606797749979}, "fancy_signatures.typecasting.special_origins.StringTypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasLT": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasEq": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasGT": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasLe": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasGe": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1.7320508075688772}}, "df": 49, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}}, "df": 13, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures": {"tf": 2.8284271247461903}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 2}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1.4142135623730951}}, "df": 4, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}}, "df": 12, "s": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {"fancy_signatures.settings.get_typecast_handlers": {"tf": 1}}, "df": 1}}, "d": {"docs": {"fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}}, "df": 11}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"fancy_signatures": {"tf": 2}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"fancy_signatures.api.validate": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.api.arg": {"tf": 1}}, "df": 1}}}}}}, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.settings.get_typecast_handlers": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}}, "df": 2}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasLength": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasEq": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasGT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLe": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasGe": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1.4142135623730951}}, "df": 9}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 2}, "fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.core.empty.is_empty": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 20}}, "y": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}}, "df": 2}}}}, "w": {"docs": {}, "df": 0, "o": {"docs": {"fancy_signatures.api.validate": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 2}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"fancy_signatures.core.empty.is_empty": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}}, "df": 23, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}, "fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.core.empty.is_empty": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}}, "df": 17, "s": {"docs": {"fancy_signatures": {"tf": 2.23606797749979}, "fancy_signatures.api.validate": {"tf": 1.7320508075688772}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}}, "df": 5}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.core.interface.Validator": {"tf": 1}, "fancy_signatures.validation.validators.GE": {"tf": 1}, "fancy_signatures.validation.validators.GT": {"tf": 1}, "fancy_signatures.validation.validators.LE": {"tf": 1}, "fancy_signatures.validation.validators.LT": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength": {"tf": 1}, "fancy_signatures.validation.validators.MinLength": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator": {"tf": 1}}, "df": 13}, "s": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 9}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"fancy_signatures": {"tf": 2.23606797749979}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.api.validate": {"tf": 1}}, "df": 1, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}}, "df": 1, "s": {"docs": {"fancy_signatures": {"tf": 2.23606797749979}}, "df": 1}}}}}, "p": {"docs": {"fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 8}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 2.23606797749979}}, "df": 1, "d": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}, "fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.core.interface.Default": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 2}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1.7320508075688772}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1.7320508075688772}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 2}}, "df": 10}, "s": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"fancy_signatures.api.arg": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"fancy_signatures.validation.validators.HasLength": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasEq": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasGT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLe": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasGe": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1.4142135623730951}}, "df": 8, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"fancy_signatures.validation.validators.HasLength": {"tf": 2.23606797749979}, "fancy_signatures.validation.validators.HasLT": {"tf": 2.23606797749979}, "fancy_signatures.validation.validators.HasEq": {"tf": 2.23606797749979}, "fancy_signatures.validation.validators.HasGT": {"tf": 2.23606797749979}, "fancy_signatures.validation.validators.IsIterable": {"tf": 2.23606797749979}, "fancy_signatures.validation.validators.HasLe": {"tf": 2.23606797749979}, "fancy_signatures.validation.validators.HasGe": {"tf": 2.23606797749979}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 2.23606797749979}}, "df": 8, "s": {"docs": {"fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 8}, "[": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 8}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 8}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 8}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "a": {"docs": {"fancy_signatures": {"tf": 6.244997998398398}, "fancy_signatures.api.arg": {"tf": 1.7320508075688772}, "fancy_signatures.api.validate": {"tf": 2}, "fancy_signatures.core.empty.is_empty": {"tf": 1}, "fancy_signatures.core.interface.Validator": {"tf": 1}, "fancy_signatures.core.interface.Default": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1.4142135623730951}, "fancy_signatures.default.defaults.DefaultValue": {"tf": 1.4142135623730951}, "fancy_signatures.default.defaults.DefaultFactory": {"tf": 1.4142135623730951}, "fancy_signatures.settings.set": {"tf": 1}, "fancy_signatures.settings.get_typecast_handlers": {"tf": 1.4142135623730951}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 2}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1.4142135623730951}, "fancy_signatures.validation.mixins.AllowOptionalMixin": {"tf": 1}, "fancy_signatures.validation.validators.GE": {"tf": 1}, "fancy_signatures.validation.validators.GT": {"tf": 1}, "fancy_signatures.validation.validators.LE": {"tf": 1}, "fancy_signatures.validation.validators.LT": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength": {"tf": 1}, "fancy_signatures.validation.validators.MinLength": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalGE": {"tf": 1}, "fancy_signatures.validation.validators.OptionalGT": {"tf": 1}, "fancy_signatures.validation.validators.OptionalLE": {"tf": 1}, "fancy_signatures.validation.validators.OptionalLT": {"tf": 1}, "fancy_signatures.validation.validators.OptionalRegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalMultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalDecimalPlacesValidator": {"tf": 1}}, "df": 55, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"fancy_signatures": {"tf": 2.449489742783178}, "fancy_signatures.api.validate": {"tf": 1.4142135623730951}, "fancy_signatures.core.empty.is_empty": {"tf": 1}, "fancy_signatures.core.interface.Validator": {"tf": 1}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster": {"tf": 1}, "fancy_signatures.validation.validators.GE": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 37, "d": {"docs": {"fancy_signatures": {"tf": 3.3166247903554}, "fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.core.interface.Default.get": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.get": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.get": {"tf": 1}, "fancy_signatures.settings.get_typecast_handlers": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}}, "df": 8, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.core.interface.TypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster": {"tf": 1}}, "df": 10}}}}, "y": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.core.empty.is_empty": {"tf": 1}, "fancy_signatures.core.interface.Default.get": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.get": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.get": {"tf": 1}, "fancy_signatures.settings.set": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}}, "df": 29}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.api.validate": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.core.interface.Default.get": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.get": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.get": {"tf": 1}}, "df": 3}}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {"fancy_signatures": {"tf": 2.8284271247461903}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}}, "df": 2}}, "l": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}, "fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.exceptions.ValidationError": {"tf": 1}, "fancy_signatures.settings.reset": {"tf": 1}, "fancy_signatures.settings.get_typecast_handlers": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 8, "o": {"docs": {}, "df": 0, "w": {"docs": {"fancy_signatures.validation.mixins.AllowOptionalMixin": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}, "fancy_signatures.validation.validators.OptionalGE": {"tf": 1}, "fancy_signatures.validation.validators.OptionalGT": {"tf": 1}, "fancy_signatures.validation.validators.OptionalLE": {"tf": 1}, "fancy_signatures.validation.validators.OptionalLT": {"tf": 1}, "fancy_signatures.validation.validators.OptionalRegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalMultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalDecimalPlacesValidator": {"tf": 1}}, "df": 13}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures": {"tf": 2.23606797749979}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}}, "df": 11}}}}}}, "s": {"docs": {"fancy_signatures": {"tf": 2.449489742783178}, "fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLength": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasLT": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasEq": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasGT": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasLe": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasGe": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1.7320508075688772}}, "df": 15}, "r": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 3.4641016151377544}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasLT": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasEq": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasGT": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasLe": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasGe": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1.7320508075688772}}, "df": 11}, "g": {"docs": {"fancy_signatures": {"tf": 4.58257569495584}, "fancy_signatures.api.arg": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 3, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.api.arg": {"tf": 2}, "fancy_signatures.core.interface.Validator": {"tf": 1}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.Default": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}, "fancy_signatures.validation.validators.GE": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.GT": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.LE": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.LT": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.MaxLength": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.MinLength": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.BlackListedValues": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.IsInValidator": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.RegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.MultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.DecimalPlacesValidator": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1.4142135623730951}}, "df": 30, "s": {"docs": {"fancy_signatures": {"tf": 2}, "fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 14}}}}}}, "s": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}, "fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.core.empty.is_empty": {"tf": 1}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.core.interface.Default.get": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.get": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.get": {"tf": 1}, "fancy_signatures.settings.set": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 49}}, "r": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures": {"tf": 2.23606797749979}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"fancy_signatures": {"tf": 2.8284271247461903}}, "df": 1}}, "t": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}}, "df": 14, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}}, "df": 1, "s": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 9}}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.api.validate": {"tf": 1}}, "df": 3}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 8, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}}, "df": 11, "l": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.api.arg": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}, "n": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures": {"tf": 2}, "fancy_signatures.api.validate": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 2.449489742783178}}, "df": 2}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 2.23606797749979}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 4, "[": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.api.arg": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.api.validate": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.api.arg": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 2}, "fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 2.23606797749979}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}}, "df": 15, "s": {"docs": {"fancy_signatures": {"tf": 2}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 2}}, "df": 2}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}}, "df": 2, "r": {"docs": {"fancy_signatures": {"tf": 2.449489742783178}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"fancy_signatures.settings.get_typecast_handlers": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1.4142135623730951}}, "df": 2}}, "d": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}, "s": {"docs": {"fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1.4142135623730951}}, "df": 2}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}}, "df": 2}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 5}, "fancy_signatures.api.validate": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 41, "d": {"docs": {"fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 12, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures": {"tf": 3}, "fancy_signatures.api.validate": {"tf": 1.7320508075688772}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 14, "s": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures": {"tf": 2.23606797749979}, "fancy_signatures.api.validate": {"tf": 1}}, "df": 2, "s": {"docs": {"fancy_signatures.api.validate": {"tf": 1}}, "df": 1}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"fancy_signatures.api.validate": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures": {"tf": 2.23606797749979}, "fancy_signatures.core.interface.Validator": {"tf": 1}, "fancy_signatures.validation.mixins.AllowOptionalMixin": {"tf": 1}, "fancy_signatures.validation.validators.GE": {"tf": 1}, "fancy_signatures.validation.validators.GT": {"tf": 1}, "fancy_signatures.validation.validators.LE": {"tf": 1}, "fancy_signatures.validation.validators.LT": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength": {"tf": 1}, "fancy_signatures.validation.validators.MinLength": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalGE": {"tf": 1}, "fancy_signatures.validation.validators.OptionalGT": {"tf": 1}, "fancy_signatures.validation.validators.OptionalLE": {"tf": 1}, "fancy_signatures.validation.validators.OptionalLT": {"tf": 1}, "fancy_signatures.validation.validators.OptionalRegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalMultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalDecimalPlacesValidator": {"tf": 1}}, "df": 21, "s": {"docs": {"fancy_signatures": {"tf": 2.449489742783178}, "fancy_signatures.api.arg": {"tf": 1.4142135623730951}, "fancy_signatures.api.validate": {"tf": 1.4142135623730951}}, "df": 3}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 12}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 2.8284271247461903}, "fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.Default": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.Default.get": {"tf": 2}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 2}, "fancy_signatures.default.defaults.DefaultValue": {"tf": 1.4142135623730951}, "fancy_signatures.default.defaults.DefaultValue.get": {"tf": 2}, "fancy_signatures.default.defaults.DefaultFactory": {"tf": 1.4142135623730951}, "fancy_signatures.default.defaults.DefaultFactory.get": {"tf": 2}, "fancy_signatures.settings.set": {"tf": 1.7320508075688772}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 2}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 2}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 2}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 2}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 2}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 2}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 2}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 2}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 2}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 2}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1.4142135623730951}}, "df": 46, "s": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}, "fancy_signatures.settings.reset": {"tf": 1}}, "df": 2}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.settings.set": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.core.empty.is_empty": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {"fancy_signatures.api.arg": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"fancy_signatures.validation.validators.HasLength": {"tf": 2}, "fancy_signatures.validation.validators.HasLT": {"tf": 2}, "fancy_signatures.validation.validators.HasEq": {"tf": 2}, "fancy_signatures.validation.validators.HasGT": {"tf": 2}, "fancy_signatures.validation.validators.IsIterable": {"tf": 2}, "fancy_signatures.validation.validators.HasLe": {"tf": 2}, "fancy_signatures.validation.validators.HasGe": {"tf": 2}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 2}}, "df": 8, "o": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.core.interface.Validator": {"tf": 1}, "fancy_signatures.core.interface.Default": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory": {"tf": 1}, "fancy_signatures.validation.validators.GE": {"tf": 1}, "fancy_signatures.validation.validators.GT": {"tf": 1}, "fancy_signatures.validation.validators.LE": {"tf": 1}, "fancy_signatures.validation.validators.LT": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength": {"tf": 1}, "fancy_signatures.validation.validators.MinLength": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator": {"tf": 1}}, "df": 16, "s": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.core.empty.is_empty": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1}}, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}, "x": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}}, "df": 1}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.validation.mixins.AllowOptionalMixin": {"tf": 1}, "fancy_signatures.validation.validators.OptionalGE": {"tf": 1}, "fancy_signatures.validation.validators.OptionalGT": {"tf": 1}, "fancy_signatures.validation.validators.OptionalLE": {"tf": 1}, "fancy_signatures.validation.validators.OptionalLT": {"tf": 1}, "fancy_signatures.validation.validators.OptionalRegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalMultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalDecimalPlacesValidator": {"tf": 1}}, "df": 8}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.api.validate": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "x": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures.validation.mixins.AllowOptionalMixin": {"tf": 1}, "fancy_signatures.validation.validators.OptionalGE": {"tf": 1}, "fancy_signatures.validation.validators.OptionalGT": {"tf": 1}, "fancy_signatures.validation.validators.OptionalLE": {"tf": 1}, "fancy_signatures.validation.validators.OptionalLT": {"tf": 1}, "fancy_signatures.validation.validators.OptionalRegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalMultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalDecimalPlacesValidator": {"tf": 1}}, "df": 8}}}, "n": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1, "d": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 8}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}, "fancy_signatures.api.arg": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}}, "df": 1, "r": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}, "d": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 10}}}, "p": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}, "n": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.api.arg": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "s": {"docs": {"fancy_signatures": {"tf": 2.23606797749979}, "fancy_signatures.core.empty.is_empty": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 9}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures": {"tf": 4.795831523312719}, "fancy_signatures.core.empty.is_empty": {"tf": 1}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 33}}}}}}}}}, "o": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}}, "df": 2, "m": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 3.7416573867739413}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1, "s": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.settings.get_typecast_handlers": {"tf": 1}}, "df": 1}}}, "r": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}, "fancy_signatures.settings.set": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.settings.get_typecast_handlers": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 8}}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"fancy_signatures.validation.validators.HasLength": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasLT": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasEq": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasGT": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasLe": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasGe": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1.7320508075688772}}, "df": 8}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}, "c": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}, "y": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures": {"tf": 2.8284271247461903}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 25}}, "d": {"docs": {"fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 12}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}, "y": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1}}, "e": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 10}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasLT": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasEq": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasGT": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasLe": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasGe": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1.7320508075688772}}, "df": 10}}, "t": {"docs": {"fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"fancy_signatures.settings.set": {"tf": 2.23606797749979}}, "df": 1, "s": {"docs": {"fancy_signatures.settings.reset": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 9}}, "b": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 8}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.api.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 10}}}}}}}, "f": {"docs": {"fancy_signatures": {"tf": 4}, "fancy_signatures.validation.validators.HasLength": {"tf": 2}, "fancy_signatures.validation.validators.HasLT": {"tf": 2}, "fancy_signatures.validation.validators.HasEq": {"tf": 2}, "fancy_signatures.validation.validators.HasGT": {"tf": 2}, "fancy_signatures.validation.validators.IsIterable": {"tf": 2}, "fancy_signatures.validation.validators.HasLe": {"tf": 2}, "fancy_signatures.validation.validators.HasGe": {"tf": 2}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 2}}, "df": 9, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 4.123105625617661}, "fancy_signatures.api.arg": {"tf": 2.23606797749979}, "fancy_signatures.core.interface.Default": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.Default.get": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue": {"tf": 1.4142135623730951}, "fancy_signatures.default.defaults.DefaultValue.get": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory": {"tf": 1.4142135623730951}, "fancy_signatures.default.defaults.DefaultFactory.get": {"tf": 1}, "fancy_signatures.settings.reset": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}}, "df": 11, "s": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.api.arg": {"tf": 1.7320508075688772}, "fancy_signatures.api.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 8}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.validation.validators.HasLength": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasEq": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasGT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLe": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasGe": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1.4142135623730951}}, "df": 8}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures.core.interface.Default.get": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.get": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.get": {"tf": 1}}, "df": 3}}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 9}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1, "n": {"docs": {"fancy_signatures.settings.set": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 2}, "fancy_signatures.settings.get_typecast_handlers": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.settings.get_typecast_handlers": {"tf": 1}}, "df": 1}}}}}}}, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.settings.get_typecast_handlers": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.settings.get_typecast_handlers": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"fancy_signatures.api.validate": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 8}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 3.3166247903554}, "fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.core.empty.is_empty": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.TypeCaster": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster": {"tf": 1}}, "df": 15, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.core.interface.Default.get": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.get": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.get": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 15}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {"fancy_signatures": {"tf": 3.4641016151377544}, "fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.core.empty.is_empty": {"tf": 1}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 15, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}}}, "t": {"1": {"6": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "3": {"2": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "6": {"4": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"fancy_signatures": {"tf": 5.830951894845301}, "fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasLT": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasEq": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasGT": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasLe": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasGe": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1.7320508075688772}}, "df": 10, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures": {"tf": 2.449489742783178}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 2.23606797749979}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.core.empty.is_empty": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}}, "df": 3}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.settings.set": {"tf": 1}}, "df": 1}}}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.Default.get": {"tf": 1.7320508075688772}, "fancy_signatures.default.defaults.DefaultValue.get": {"tf": 1.7320508075688772}, "fancy_signatures.default.defaults.DefaultFactory.get": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1.4142135623730951}}, "df": 16}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.typecasting.handlers.register_handler": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 4.69041575982343}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.api.validate": {"tf": 1}}, "df": 1}}}}}}}}}}, "f": {"docs": {"fancy_signatures": {"tf": 3.3166247903554}, "fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.core.empty.is_empty": {"tf": 1}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.settings.set": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 42}, "s": {"docs": {"fancy_signatures": {"tf": 2.8284271247461903}, "fancy_signatures.api.arg": {"tf": 1.7320508075688772}, "fancy_signatures.core.empty.is_empty": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 22, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.api.arg": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 8}}}}}}}}, "b": {"docs": {"fancy_signatures": {"tf": 4.795831523312719}}, "df": 1, "y": {"docs": {"fancy_signatures": {"tf": 2.449489742783178}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}}, "df": 3}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}, "e": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.exceptions.ValidationError": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 10, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "l": {"docs": {"fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.api.validate": {"tf": 1.4142135623730951}, "fancy_signatures.core.empty.is_empty": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 20}}}, "e": {"docs": {"fancy_signatures": {"tf": 4.123105625617661}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1.4142135623730951}}, "df": 37, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1.4142135623730951}}, "df": 1}}}}, "g": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1, "t": {"docs": {"fancy_signatures": {"tf": 4.242640687119285}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 4.898979485566356}, "fancy_signatures.validation.validators.HasLength": {"tf": 2}, "fancy_signatures.validation.validators.HasLT": {"tf": 2}, "fancy_signatures.validation.validators.HasEq": {"tf": 2}, "fancy_signatures.validation.validators.HasGT": {"tf": 2}, "fancy_signatures.validation.validators.IsIterable": {"tf": 2}, "fancy_signatures.validation.validators.HasLe": {"tf": 2}, "fancy_signatures.validation.validators.HasGe": {"tf": 2}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 2}}, "df": 10}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures": {"tf": 2.23606797749979}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"fancy_signatures.api.validate": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 9, "s": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}}, "df": 1}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 8}}}}}}, "t": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}, "fancy_signatures.settings.get_typecast_handlers": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 22}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures": {"tf": 4}, "fancy_signatures.core.empty.is_empty": {"tf": 1}, "fancy_signatures.core.interface.Default.get": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.get": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.get": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasEq": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasGT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLe": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasGe": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1.4142135623730951}}, "df": 13, "s": {"docs": {"fancy_signatures": {"tf": 2.8284271247461903}, "fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.core.empty.is_empty": {"tf": 1}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.core.interface.Default": {"tf": 1}, "fancy_signatures.core.interface.Default.get": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue.get": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory.get": {"tf": 1}, "fancy_signatures.settings.get_typecast_handlers": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 51}, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 12}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures": {"tf": 3.4641016151377544}, "fancy_signatures.api.validate": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1.4142135623730951}}, "df": 7}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures": {"tf": 2.23606797749979}, "fancy_signatures.api.arg": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 8}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}, "k": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.settings.reset": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.settings.get_typecast_handlers": {"tf": 1}}, "df": 1}}}}}}}}, "d": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 2.6457513110645907}}, "df": 1}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}, "fancy_signatures.api.validate": {"tf": 1.7320508075688772}}, "df": 2, "s": {"docs": {"fancy_signatures": {"tf": 2}, "fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.settings.set": {"tf": 1}}, "df": 3}, "d": {"docs": {"fancy_signatures": {"tf": 2}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 24}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.validation.validators.HasLength": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasEq": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasGT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLe": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasGe": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1.4142135623730951}}, "df": 8}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 8.12403840463596}}, "df": 1}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {"fancy_signatures.validation.validators.HasLength": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasEq": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasGT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLe": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasGe": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1.4142135623730951}}, "df": 8, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.api.arg": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"fancy_signatures.settings.get_typecast_handlers": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.core.empty.is_empty": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.core.interface.Default": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}}, "df": 4}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.api.validate": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 3.4641016151377544}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.exceptions.ValidationError": {"tf": 1}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 2.23606797749979}}, "df": 1}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.core.interface.TypeCaster": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}}, "df": 33}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures": {"tf": 2.449489742783178}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1.7320508075688772}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 14}, "l": {"docs": {}, "df": 0, "l": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}}, "df": 2, "s": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.api.arg": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.api.validate": {"tf": 1.4142135623730951}}, "df": 1, "[": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.api.validate": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.core.interface.TypeCaster": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}}, "df": 22, "s": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}, "r": {"docs": {"fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.settings.set": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 13, "s": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"fancy_signatures": {"tf": 3}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.settings.get_typecast_handlers": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}}, "df": 12}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures": {"tf": 2.8284271247461903}, "fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.exceptions.ValidationError": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 2}, "fancy_signatures.validation.validators.HasLT": {"tf": 2}, "fancy_signatures.validation.validators.HasEq": {"tf": 2}, "fancy_signatures.validation.validators.HasGT": {"tf": 2}, "fancy_signatures.validation.validators.IsIterable": {"tf": 2}, "fancy_signatures.validation.validators.HasLe": {"tf": 2}, "fancy_signatures.validation.validators.HasGe": {"tf": 2}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 2}}, "df": 12, "e": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLength": {"tf": 2.23606797749979}, "fancy_signatures.validation.validators.HasLT": {"tf": 2.23606797749979}, "fancy_signatures.validation.validators.HasEq": {"tf": 2.23606797749979}, "fancy_signatures.validation.validators.HasGT": {"tf": 2.23606797749979}, "fancy_signatures.validation.validators.IsIterable": {"tf": 2.23606797749979}, "fancy_signatures.validation.validators.HasLe": {"tf": 2.23606797749979}, "fancy_signatures.validation.validators.HasGe": {"tf": 2.23606797749979}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 2.23606797749979}}, "df": 9}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"fancy_signatures.core.empty.is_empty": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasEq": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasGT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLe": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasGe": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1.4142135623730951}}, "df": 10, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 8}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 8}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.settings.set": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}}, "df": 2}}}}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.api.validate": {"tf": 1.7320508075688772}, "fancy_signatures.core.empty.is_empty": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 10}}}}, "n": {"docs": {"fancy_signatures.api.arg": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"fancy_signatures": {"tf": 2}, "fancy_signatures.api.validate": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasEq": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasGT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLe": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasGe": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1.4142135623730951}}, "df": 11}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"fancy_signatures": {"tf": 3.3166247903554}, "fancy_signatures.api.arg": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1}, "n": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.api.arg": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "l": {"docs": {"fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.cast": {"tf": 1}, "fancy_signatures.exceptions.ValidationError": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.cast": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.cast": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.cast": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 25}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}, "fancy_signatures.api.validate": {"tf": 1}}, "df": 2}}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 2}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 10}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}}, "df": 4}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.exceptions.ValidationError": {"tf": 1}}, "df": 1}, "s": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures.settings.set": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.api.validate": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"fancy_signatures.api.validate": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 13}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}}, "df": 1, "s": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}, "fancy_signatures.core.empty.is_empty": {"tf": 1.4142135623730951}}, "df": 2, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {"fancy_signatures": {"tf": 2}, "fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.core.empty.is_empty": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}}, "df": 6}}}}}}}, "l": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "f": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.core.empty.is_empty": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "h": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}, "fancy_signatures.api.validate": {"tf": 2}, "fancy_signatures.core.interface.Validator": {"tf": 1}, "fancy_signatures.core.interface.Default": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.Default.get": {"tf": 1}, "fancy_signatures.default.defaults.DefaultValue": {"tf": 1.4142135623730951}, "fancy_signatures.default.defaults.DefaultValue.get": {"tf": 1}, "fancy_signatures.default.defaults.DefaultFactory": {"tf": 1.4142135623730951}, "fancy_signatures.default.defaults.DefaultFactory.get": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.validators.GE": {"tf": 1}, "fancy_signatures.validation.validators.GT": {"tf": 1}, "fancy_signatures.validation.validators.LE": {"tf": 1}, "fancy_signatures.validation.validators.LT": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength": {"tf": 1}, "fancy_signatures.validation.validators.MinLength": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator": {"tf": 1}}, "df": 24, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1}}}}, "n": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}, "fancy_signatures.api.validate": {"tf": 1}}, "df": 2, "e": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}}, "df": 3}, "l": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}}, "df": 11}}, "c": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.api.validate": {"tf": 1}}, "df": 2}}}, "f": {"docs": {"fancy_signatures": {"tf": 3}, "fancy_signatures.api.validate": {"tf": 1.4142135623730951}, "fancy_signatures.core.empty.is_empty": {"tf": 1.4142135623730951}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.settings.set": {"tf": 1.4142135623730951}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.factory.typecaster_factory": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1.4142135623730951}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1.7320508075688772}, "fancy_signatures.validation.validators.HasLength": {"tf": 1}, "fancy_signatures.validation.validators.HasLT": {"tf": 1}, "fancy_signatures.validation.validators.HasEq": {"tf": 1}, "fancy_signatures.validation.validators.HasGT": {"tf": 1}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1}, "fancy_signatures.validation.validators.HasLe": {"tf": 1}, "fancy_signatures.validation.validators.HasGe": {"tf": 1}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 43}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}, "fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 13, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.core.interface.TypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.handlers.register_handler": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 17}}}}}, "k": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}}, "df": 1}, "w": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1.7320508075688772}}, "df": 1}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"fancy_signatures.api.arg": {"tf": 1.7320508075688772}, "fancy_signatures.api.validate": {"tf": 2}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 7}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.api.validate": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"fancy_signatures.api.validate": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.core.interface.TypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.ListTupleSetTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.generic_alias.DictTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.StringTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnyTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.AnnotatedTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.BooleanTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.NoneTypeCaster.validate": {"tf": 1}, "fancy_signatures.typecasting.special_origins.ProtocolTypecaster.validate": {"tf": 1}, "fancy_signatures.typecasting.union.UnionTypeCaster.validate": {"tf": 1}}, "df": 12}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}}}}}}, "w": {"docs": {"fancy_signatures.settings.set": {"tf": 1}}, "df": 1}}, "o": {"docs": {"fancy_signatures.core.interface.Validator.validate": {"tf": 1}, "fancy_signatures.typecasting.default.DefaultTypeCaster": {"tf": 1}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.validators.GE.validate": {"tf": 1}, "fancy_signatures.validation.validators.GT.validate": {"tf": 1}, "fancy_signatures.validation.validators.LE.validate": {"tf": 1}, "fancy_signatures.validation.validators.LT.validate": {"tf": 1}, "fancy_signatures.validation.validators.MaxLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.MinLength.validate": {"tf": 1}, "fancy_signatures.validation.validators.BlackListedValues.validate": {"tf": 1}, "fancy_signatures.validation.validators.IsInValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.RegexValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.MultipleOfValidator.validate": {"tf": 1}, "fancy_signatures.validation.validators.DecimalPlacesValidator.validate": {"tf": 1}}, "df": 14, "t": {"docs": {"fancy_signatures": {"tf": 2.23606797749979}, "fancy_signatures.api.arg": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 7, "e": {"docs": {"fancy_signatures": {"tf": 1.4142135623730951}}, "df": 1}}, "n": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.exceptions.ValidationError": {"tf": 1}, "fancy_signatures.settings.get_typecast_handlers": {"tf": 1}}, "df": 3, "e": {"docs": {"fancy_signatures": {"tf": 1}, "fancy_signatures.api.arg": {"tf": 2}, "fancy_signatures.api.validate": {"tf": 1}, "fancy_signatures.validation.mixins.AllowOptionalMixin": {"tf": 1}, "fancy_signatures.validation.related.validators.mutually_exclusive_args": {"tf": 1.7320508075688772}, "fancy_signatures.validation.related.validators.exactly_x": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.exactly_one": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.complementary_args": {"tf": 1.4142135623730951}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.OptionalGE": {"tf": 1}, "fancy_signatures.validation.validators.OptionalGT": {"tf": 1}, "fancy_signatures.validation.validators.OptionalLE": {"tf": 1}, "fancy_signatures.validation.validators.OptionalLT": {"tf": 1}, "fancy_signatures.validation.validators.OptionalRegexValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalMultipleOfValidator": {"tf": 1}, "fancy_signatures.validation.validators.OptionalDecimalPlacesValidator": {"tf": 1}}, "df": 16}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures": {"tf": 2.6457513110645907}, "fancy_signatures.settings.set": {"tf": 1}, "fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}, "fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 4, "d": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}, "/": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"fancy_signatures.validation.related.validators.hierarchical_args": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}}, "df": 1}}}}}}, "p": {"docs": {"fancy_signatures": {"tf": 3.1622776601683795}}, "df": 1}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {"fancy_signatures": {"tf": 3.605551275463989}}, "df": 1, "r": {"docs": {"fancy_signatures": {"tf": 3.1622776601683795}}, "df": 1}}}}, "k": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"fancy_signatures": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"fancy_signatures.settings.ProtocolHandlingLevel": {"tf": 1}}, "df": 1}}}}, "j": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"fancy_signatures": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {"fancy_signatures.validation.related.validators.exactly_x": {"tf": 1}, "fancy_signatures.validation.validators.HasLength": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasEq": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasGT": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.IsIterable": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasLe": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasGe": {"tf": 1.4142135623730951}, "fancy_signatures.validation.validators.HasMinMax": {"tf": 1.4142135623730951}}, "df": 9}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();